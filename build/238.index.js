/*!
 * 
 *   @aptero/axolotis-player v1.0.0
 *   https://github.com/ApteroSAS/axolotis-player
 *
 *   Copyright (c) Aptero (https://github.com/ApteroSAS/axolotis-player) and project contributors.
 *
 *   This source code is licensed under the MIT license found in the
 *   LICENSE file in the root directory of this source tree.
 *
 */
(self.webpackChunkaxolotis_player=self.webpackChunkaxolotis_player||[]).push([[238],{952:function(t,e,i){"use strict";i.d(e,{J0:function(){return a},Zy:function(){return d},b4:function(){return m}});var s=i(178),o=i(212),n=i(135),r={};let a=null,c=null,h=null,l=null;const u=4,p=-1;function m(t){let e=function(t){let e=(new n.N).setFromObject(t).faces,i=[],s=[];for(var r=0;r<e.length;r++){var a=e[r],c=a.edge;do{let t=c.head().point;i.push(t.x,t.y,t.z),s.push(a.normal.x,a.normal.y,a.normal.z),c=c.next}while(c!==a.edge)}const h=new o.BufferGeometry;return h.setAttribute("position",new o.Float32BufferAttribute(i,3)),h.setAttribute("normal",new o.Float32BufferAttribute(s,3)),h}(t).attributes.position.array,i=new a.btVector3(0,0,0),s=new a.btConvexHullShape;for(let t=0,o=e.length;t<o;t+=3){i.setValue(e[t],e[t+1],e[t+2]);let n=t>=o-3;s.addPoint(i,n)}return s}class d{static init(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:()=>{};s(r).then((e=>{a=e,t()}))}static CreateTrigger(t,e,i){const s=new a.btTransform;s.setIdentity(),e&&s.setOrigin(new a.btVector3(e.x,e.y,e.z)),i&&s.setRotation(new a.btQuaternion(i.x,i.y,i.z,i.w));const o=new a.btPairCachingGhostObject;return o.setCollisionShape(t),o.setCollisionFlags(u),o.setWorldTransform(s),o}static IsTriggerOverlapping(t,e){for(let i=0;i<t.getNumOverlappingObjects();i++){if(a.castObject(t.getOverlappingObject(i),a.btRigidBody)==e)return!0}return!1}static CastRay(t,e,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:p;c||(c=new a.btVector3,h=new a.btVector3,l=new a.ClosestRayResultCallback(c,h));const n=a.castObject(l,a.RayResultCallback);if(n.set_m_closestHitFraction(1),n.set_m_collisionObject(null),n.m_collisionFilterMask=o,c.setValue(e.x,e.y,e.z),h.setValue(i.x,i.y,i.z),l.get_m_rayFromWorld().setValue(e.x,e.y,e.z),l.get_m_rayToWorld().setValue(i.x,i.y,i.z),t.rayTest(c,h,l),l.hasHit()){if(s.intersectionPoint){const t=l.get_m_hitPointWorld();s.intersectionPoint.set(t.x(),t.y(),t.z())}if(s.intersectionNormal){const t=l.get_m_hitNormalWorld();s.intersectionNormal.set(t.x(),t.y(),t.z())}return s.collisionObject=n.get_m_collisionObject(),!0}return!1}}},856:function(t,e,i){"use strict";i.r(e),i.d(e,{Factory:function(){return c},default:function(){return h}});var s=i(212),o=i(952);class n{constructor(t){this.world=t.physicsWorld,this.body=null,this.canJump=!1,this.up=new o.J0.btVector3(0,1,0),this.tempVec=new o.J0.btVector3}Initialize(t,e,i){const s=new o.J0.btTransform;s.setIdentity(),s.setOrigin(new o.J0.btVector3(t,e,i));const n=new o.J0.btDefaultMotionState(s),r=new o.J0.btCapsuleShape(.3,1.3),a=new o.J0.btVector3(0,0,0),c=new o.J0.btRigidBodyConstructionInfo(5,n,r,a);this.body=new o.J0.btRigidBody(c),this.body.setFriction(0),this.body.setActivationState(4),this.world.addRigidBody(this.body)}QueryJump(){const t=this.world.getDispatcher(),e=t.getNumManifolds();for(let i=0;i<e;i++){const e=t.getManifoldByIndexInternal(i),s=o.J0.castObject(e.getBody0(),o.J0.btRigidBody),n=o.J0.castObject(e.getBody1(),o.J0.btRigidBody);if(s!=this.body&&n!=this.body)continue;const r=e.getNumContacts();for(let t=0;t<r;t++){const i=e.getContactPoint(t).get_m_normalWorldOnB();this.tempVec.setValue(i.x(),i.y(),i.z()),n==this.body&&this.tempVec.setValue(-this.tempVec.x(),-this.tempVec.y(),-this.tempVec.z());const s=this.tempVec.dot(this.up);if(this.canJump=s>.5,this.canJump)return}}}PhysicsUpdate(){this.QueryJump()}}var r=i(987);function a(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}class c{async create(t,e){let i=t.getFirstComponentByType(r.e.name),o=await i.getService("@root/lib/modules/three/ThreeLib"),a=await i.getService("@root/lib/modules/core/ammo/AmmoPhysics"),c=await i.getService("@root/lib/modules/controller/Input"),l=await i.getService("@root/lib/modules/FrameLoop"),u=new s.Vector3(e.position&&e.position.x||0,e.position&&e.position.y||0,e.position&&e.position.z||0),p=(new s.Quaternion).setFromAxisAngle(new s.Vector3(0,1,0),.5*-Math.PI),m=new n(await a);m.Initialize(u.x,u.y,u.z);let d=new h(m,u,p,await o,await c);return d.Initialize(),(await l).addLoop(h.name,(t=>{d.Update(t),m.PhysicsUpdate()})),d}}class h{getType(){return h.name}constructor(t,e,i,o,n){a(this,"OnPointerlockChange",(()=>{document.pointerLockElement?this.isLocked=!0:this.isLocked=!1})),a(this,"OnMouseMove",(t=>{if(!this.isLocked)return;const{movementX:e,movementY:i}=t;this.angles.y-=e*this.mouseSpeed,this.angles.x-=i*this.mouseSpeed,this.angles.x=Math.max(-Math.PI/2,Math.min(Math.PI/2,this.angles.x)),this.UpdateRotation()})),a(this,"Accelarate",((t,e)=>{const i=this.tempVec.copy(t).multiplyScalar(this.acceleration*e);this.speed.add(i),this.speed.clampLength(0,this.maxSpeed)})),a(this,"Deccelerate",(t=>{const e=this.tempVec.copy(this.speed).multiplyScalar(this.decceleration*t);this.speed.add(e)})),this.input=n,this.physicsComponent=t,this.position=e,this.rotation=i,this.camera=o.camera,this.timeZeroToMax=.08,this.maxSpeed=7,this.speed=new s.Vector3,this.acceleration=this.maxSpeed/this.timeZeroToMax,this.decceleration=-7,this.mouseSpeed=.002,this.isLocked=!1,this.angles=new s.Euler,this.pitch=new s.Quaternion,this.yaw=new s.Quaternion,this.jumpVelocity=5,this.yOffset=.5,this.tempVec=new s.Vector3,this.moveDir=new s.Vector3,this.xAxis=new s.Vector3(1,0,0),this.yAxis=new s.Vector3(0,1,0)}Initialize(){this.physicsBody=this.physicsComponent.body,this.transform=new Ammo.btTransform,this.zeroVec=new Ammo.btVector3(0,0,0),this.angles.setFromQuaternion(this.rotation),this.UpdateRotation(),this.input.AddMouseMoveListner(this.OnMouseMove),document.addEventListener("pointerlockchange",this.OnPointerlockChange),this.input.AddClickListner((()=>{this.isLocked||document.body.requestPointerLock()}))}UpdateRotation(){this.pitch.setFromAxisAngle(this.xAxis,this.angles.x),this.yaw.setFromAxisAngle(this.yAxis,this.angles.y),this.rotation.multiplyQuaternions(this.yaw,this.pitch).normalize(),this.camera.quaternion.copy(this.rotation)}Update(t){t*=.001;const e=this.input.GetKeyDown("KeyS")-this.input.GetKeyDown("KeyW"),i=this.input.GetKeyDown("KeyD")-this.input.GetKeyDown("KeyA"),s=this.moveDir.set(i,0,e).normalize(),o=this.physicsBody.getLinearVelocity();this.input.GetKeyDown("Space")&&this.physicsComponent.canJump&&(o.setY(this.jumpVelocity),this.physicsComponent.canJump=!1),this.Deccelerate(t),this.Accelarate(s,t);const n=this.tempVec.copy(this.speed);n.applyQuaternion(this.yaw),o.setX(n.x),o.setZ(n.z),this.physicsBody.setLinearVelocity(o),this.physicsBody.setAngularVelocity(this.zeroVec);const r=this.physicsBody.getMotionState();if(r){r.getWorldTransform(this.transform);const t=this.transform.getOrigin();this.camera.position.set(t.x(),t.y()+this.yOffset,t.z()),this.position.copy(this.camera.position)}}}},207:function(){},297:function(){}}]);
//# sourceMappingURL=238.index.js.map