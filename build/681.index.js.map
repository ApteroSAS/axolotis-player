{"version":3,"file":"681.index.js","mappings":"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","sources":["webpack://axolotis-player/./node_modules/three/examples/jsm/controls/OrbitControls.js","webpack://axolotis-player/./src/lib/modules/controller/cameraController/OrbitController.ts"],"sourcesContent":["import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from 'three';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\t\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerCancel );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\t\tlet zoomChanged = false;\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly() {\n\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t    removePointer( event );\n\n\t\t    if ( pointers.length === 0 ) {\n\n\t\t        scope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t        scope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t        scope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t    }\n\n\t\t    scope.dispatchEvent( _endEvent );\n\n\t\t    state = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onPointerCancel( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerCancel );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\t\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\t\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\t\tthis.touches.ONE = TOUCH.PAN;\n\t\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n\t}\n\n}\n\nexport { OrbitControls, MapControls };\n","import { ThreeLib } from \"@root/lib/modules/three/ThreeLib\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { FrameLoop } from \"@root/lib/modules/FrameLoop\";\nimport Component from \"@root/lib/modules/core/ecs/Component\";\nimport { WebpackLazyModule } from \"@root/lib/modules/core/loader/WebpackLoader\";\nimport {\n  LazyServices,\n  Service,\n} from \"@root/lib/modules/core/service/LazyServices\";\n\nexport class Factory implements WebpackLazyModule, Service<OrbitController> {\n  async create(services: LazyServices): Promise<OrbitController> {\n    let frameLoop = await services.getService<FrameLoop>(\n      \"@root/lib/modules/FrameLoop\"\n    );\n    let three = await services.getService<ThreeLib>(\n      \"@root/lib/modules/three/ThreeLib\"\n    );\n    let module = new OrbitController(three, frameLoop);\n    return module;\n  }\n}\n\nexport class OrbitController implements Component {\n  constructor(three: ThreeLib, frameLoop: FrameLoop) {\n    const controls = new OrbitControls(three.camera, three.renderer.domElement);\n    frameLoop.addLoop(OrbitController.name, () => {\n      controls.update();\n    });\n  }\n\n  getType(): string {\n    return OrbitController.name;\n  }\n}\n"],"names":["_changeEvent","type","_startEvent","_endEvent","OrbitControls","EventDispatcher","constructor","object","domElement","super","undefined","console","warn","document","error","this","style","touchAction","enabled","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","MIDDLE","touches","ONE","TOUCH","TWO","target0","clone","position0","position","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","getDistance","distanceTo","listenToKeyEvents","addEventListener","onKeyDown","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","update","state","STATE","NONE","offset","quat","Quaternion","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","min","max","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onPointerDown","onPointerCancel","onMouseWheel","onPointerMove","onPointerUp","ROTATE","DOLLY","PAN","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","x","y","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","getSecondPointerPosition","subVectors","handleTouchMovePan","handleTouchMoveDolly","setPointerCapture","pointerId","push","addPointer","pointerType","trackPointer","onTouchStart","mouseAction","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","onTouchMove","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","removePointer","releasePointerCapture","preventDefault","handleMouseWheel","needsUpdate","code","handleKeyDown","i","splice","pointer","passive","Factory","services","frameLoop","getService","three","OrbitController","controls","camera","renderer","addLoop","name","getType"],"sourceRoot":""}