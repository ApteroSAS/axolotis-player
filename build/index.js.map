{"version":3,"file":"index.js","mappings":"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","sources":["webpack://axolotis-player/webpack/universalModuleDefinition","webpack://axolotis-player/webpack/runtime/load script","webpack://axolotis-player/./src/lib/modules/core/WorldService.ts","webpack://axolotis-player/./src/lib/modules/core/ecs/Entity.ts","webpack://axolotis-player/./src/lib/modules/core/ecs/WorldEntity.ts","webpack://axolotis-player/./src/lib/modules/core/loader/AssetsLoader.ts","webpack://axolotis-player/./src/lib/modules/core/loader/CodeLoaderComponent.ts","webpack://axolotis-player/./src/lib/modules/core/loader/CodeLoader.ts","webpack://axolotis-player/./src/lib/generated/webpack/module/ClassNameConverter.ts","webpack://axolotis-player/./src/lib/modules/core/loader/WebpackLoader.ts","webpack://axolotis-player/./src/lib/generated/webpack/module/WebpackLoader.ts","webpack://axolotis-player/./src/lib/modules/core/service/ServiceEntity.ts","webpack://axolotis-player/./src/lib/modules/core/service/LazyServices.ts","webpack://axolotis-player/webpack/bootstrap","webpack://axolotis-player/webpack/runtime/compat get default export","webpack://axolotis-player/webpack/runtime/define property getters","webpack://axolotis-player/webpack/runtime/ensure chunk","webpack://axolotis-player/webpack/runtime/get javascript chunk filename","webpack://axolotis-player/webpack/runtime/get mini-css chunk filename","webpack://axolotis-player/webpack/runtime/global","webpack://axolotis-player/webpack/runtime/hasOwnProperty shorthand","webpack://axolotis-player/webpack/runtime/make namespace object","webpack://axolotis-player/webpack/runtime/publicPath","webpack://axolotis-player/webpack/runtime/jsonp chunk loading","webpack://axolotis-player/./src/lib/modules/core/loader/CoreInit.ts","webpack://axolotis-player/./src/lib/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"axolotis-player\"] = factory();\n\telse\n\t\troot[\"axolotis-player\"] = factory();\n})(self, function() {\nreturn ","var inProgress = {};\nvar dataWebpackPrefix = \"axolotis-player:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","import { WebpackLazyModule } from \"@root/lib/modules/core/loader/WebpackLoader\";\nimport {\n  LazyServices,\n  Service,\n} from \"@root/lib/modules/core/service/LazyServices\";\nimport Component from \"@root/lib/modules/core/ecs/Component\";\nimport { WorldEntity } from \"@root/lib/modules/core/ecs/WorldEntity\";\nimport { ServiceEntity } from \"@root/lib/modules/core/service/ServiceEntity\";\nimport { CodeLoaderComponent } from \"@root/lib/modules/core/loader/CodeLoaderComponent\";\n\nexport class Factory implements WebpackLazyModule, Service<WorldService> {\n  constructor() {}\n\n  async create(services: LazyServices): Promise<WorldService> {\n    return new WorldService(services);\n  }\n}\n\n//(await axolotis.worlds[1].components[0].service[\"@root/lib/modules/core/WorldService:Factory\"]).setActiveWorld(1)\n\ndeclare let window: any;\n\nlet activeWorld = -1;\nlet worlds: WorldEntity[] = [];\nlet addOnWorldChangeCallback: (() => void)[] = []; //do not use events emitter here to avoid surcharing dependencies in the code modules\nlet addOnWorldAddedCallback: (() => void)[] = []; //do not use events emitter here to avoid surcharing dependencies in the code modules\n\nexport function registerNewWorld(worldEntity: WorldEntity) {\n  worlds.push(worldEntity);\n  if (activeWorld < 0) {\n    activeWorld = 0;\n    window.axolotis.world = worlds[activeWorld];\n    window.axolotis.activeWorld = activeWorld;\n  }\n}\n\nif (window) {\n  if (!window.axolotis) {\n    window.axolotis = {};\n  }\n  window.axolotis.worlds = worlds;\n  window.axolotis.activeWorld = activeWorld;\n}\n\nexport class WorldService implements Component {\n  private world: WorldEntity;\n\n  constructor(services: LazyServices) {\n    console.log(\"info\");\n    let worldtmp: any = null;\n    for (const world of this.getWorlds()) {\n      let serviceEntity = world.getFirstComponentByType<ServiceEntity>(\n        ServiceEntity.name\n      );\n      if (serviceEntity == services) {\n        worldtmp = world;\n      }\n    }\n    if (!worldtmp) {\n      throw new Error();\n    }\n    this.world = worldtmp;\n\n    //new world service is new world event\n    services\n      .getService<CodeLoaderComponent>(\n        \"@root/lib/modules/core/loader/CodeLoaderService\"\n      )\n      .then(async (codeLoader) => {\n        codeLoader.awaitInitialLoading();\n        for (const callback of addOnWorldAddedCallback) {\n          callback();\n        }\n      });\n\n    if (activeWorld >= 0) {\n      this.setActiveWorldByNumber(activeWorld);\n    }\n  }\n\n  getType(): string {\n    return WorldService.name;\n  }\n\n  getWorlds() {\n    return worlds;\n  }\n\n  getActiveWorld() {\n    return worlds[activeWorld];\n  }\n\n  isActiveWorld() {\n    return this.world == this.getActiveWorld();\n  }\n\n  addOnWorldChangeCallback(callback: () => void, init: boolean = false) {\n    addOnWorldChangeCallback.push(callback);\n    if (init) {\n      callback();\n    }\n  }\n\n  addOnWorldAdded(callback: () => void, init: boolean = false) {\n    addOnWorldAddedCallback.push(callback);\n    if (init) {\n      callback();\n    }\n  }\n\n  setActiveWorld(world: WorldEntity) {\n    for (let i = 0; i < this.getWorlds().length; i++) {\n      if (world == this.getWorlds()[i]) {\n        this.setActiveWorldByNumber(i);\n        return;\n      }\n    }\n    throw new Error();\n  }\n\n  setActiveWorldByNumber(number: number) {\n    if (activeWorld != number) {\n      activeWorld = number;\n      if (window && window.axolotis) {\n        window.axolotis.activeWorld = activeWorld;\n        window.axolotis.world = worlds[activeWorld];\n      }\n      for (const callback of addOnWorldChangeCallback) {\n        callback();\n      }\n    }\n  }\n}\n","import { DestroyableComponent } from \"./DestroyableComponent\";\nimport { Component } from \"./Component\";\n\nexport class Entity implements Component {\n  private components: Component[] = [];\n  private waitingForComponent: { [id: string]: any[] } = {};\n\n  constructor(private name: string) {}\n\n  public addComponent<T extends Component>(component: T): T {\n    this.components.push(component);\n\n    //part for async getComponent\n    if (this.waitingForComponent[component.getType()]) {\n      for (const elem of this.waitingForComponent[component.getType()]) {\n        elem(component);\n      }\n      delete this.waitingForComponent[component.getType()];\n    }\n\n    return component;\n  }\n\n  public removeAllComponents() {\n    this.components.forEach((comp) => {\n      this.removeComponent(comp);\n    });\n  }\n\n  public removeComponent<T extends Component>(component: T): T {\n    if (\"destroy\" in component) {\n      (component as any as DestroyableComponent).destroy();\n    }\n    this.components = this.components.filter((comp) => {\n      return comp != component;\n    });\n    return component;\n  }\n\n  public addComponents(components: Component[]) {\n    components.forEach((comp) => {\n      this.addComponent(comp);\n    });\n  }\n\n  public getComponents(): Component[] {\n    return this.components;\n  }\n\n  public getComponentByType<T extends Component>(type: string): T[] {\n    let ret: T[] = [];\n    this.components.forEach((comp) => {\n      if (comp.getType() === type) {\n        ret.push(comp as T);\n      }\n    });\n    return ret;\n  }\n\n  public getComponentByTypeStartsWith(type: string): Component[] {\n    let ret: Component[] = [];\n    this.components.forEach((comp) => {\n      if (comp.getType().startsWith(type)) {\n        ret.push(comp);\n      }\n    });\n    return ret;\n  }\n\n  public getFirstComponentByTypeStartsWith<T extends Component>(\n    type: string\n  ): T {\n    return this.getComponentByTypeStartsWith(type)[0] as T;\n  }\n\n  public getFirstComponentByType<T extends Component>(type: string): T {\n    return this.getComponentByType(type)[0] as T;\n  }\n\n  public async getFirstComponentByTypeAsync<T extends Component>(\n    type: string\n  ): Promise<T> {\n    if (this.getComponentByType(type)[0]) {\n      return this.getComponentByType(type)[0] as T;\n    } else {\n      if (!this.waitingForComponent[type]) {\n        this.waitingForComponent[type] = [];\n      }\n      let promise = new Promise<T>((resolve, reject) => {\n        this.waitingForComponent[type].push(resolve); //will resolve later\n      });\n      return promise;\n    }\n  }\n\n  public getType(): string {\n    return this.name;\n  }\n}\n\nexport default Entity;\n","import Entity from \"@root/lib/modules/core/ecs/Entity\";\nimport { registerNewWorld } from \"@root/lib/modules/core/WorldService\";\n\nexport class WorldEntity extends Entity {\n  constructor() {\n    super(\"world\");\n    registerNewWorld(this);\n  }\n}\n","/*\nplease do not add static import\n */\nexport class AssetsLoader {\n  loaderCache = {};\n  assets = {};\n\n  async getLoader(loaderName: string, loaderLoader: () => void) {\n    if (!this.loaderCache[loaderName]) {\n      this.loaderCache[loaderName] = await loaderLoader();\n    }\n    return this.loaderCache[loaderName];\n  }\n}\n\nexport const assetsLoader: AssetsLoader = new AssetsLoader();\n\nexport async function loadAssets(path: string) {\n  if (assetsLoader.assets[path]) {\n    return assetsLoader.assets[path];\n  }\n  /*\n    TODO createa a early start download of assets so that the GLB start downloading early in the waterfall\n    Not as simple as it seems may be doable using service worker\n    fetch(path);//start download of assets\n    var oReq = new XMLHttpRequest();\n    oReq.addEventListener(\"load\", ()=>{});\n    oReq.open(\"GET\", path);\n    oReq.send();\n    */\n  if (path.endsWith(\".glb\")) {\n    const loader = await assetsLoader.getLoader(\"GLTFLoader\", async () => {\n      const GLTFLoader: any = await import(\n        \"three/examples/jsm/loaders/GLTFLoader\"\n      );\n      const gltfLoader = new GLTFLoader.GLTFLoader();\n      return gltfLoader;\n    });\n    const result = await loader.loadAsync(path);\n    assetsLoader.assets[path] = result;\n  }\n  if (path.endsWith(\".jpg\")) {\n    const loader = await assetsLoader.getLoader(\"TextureLoader\", async () => {\n      const THREE: any = await import(\"three\");\n      const texLoader = new THREE.TextureLoader();\n      return texLoader;\n    });\n    const result = await loader.loadAsync(path);\n    assetsLoader.assets[path] = result;\n  }\n  return assetsLoader.assets[path];\n}\n","import Component from \"@root/lib/modules/core/ecs/Component\";\nimport { load } from \"@root/lib/modules/core/loader/CodeLoader\";\nimport { loadAssets } from \"@root/lib/modules/core/loader/AssetsLoader\";\nimport { instanciateWebpackAsyncModule } from \"@root/lib/modules/core/loader/WebpackLoader\";\nimport { ComponentFactory } from \"@root/lib/modules/core/ecs/ComponentFactory\";\nimport { WorldEntity } from \"@root/lib/modules/core/ecs/WorldEntity\";\nimport { ServiceEntity } from \"@root/lib/modules/core/service/ServiceEntity\";\n\nexport class CodeLoaderComponent implements Component {\n  private initialLoading: Promise<any>;\n  private initialLoadingResolver: ((value: any) => void) | undefined;\n  public roomUrl: string = \"\";\n\n  constructor() {\n    this.initialLoading = new Promise<any>((resolve) => {\n      this.initialLoadingResolver = resolve;\n    });\n  }\n\n  cleanUpRoomUrl(roomUrl: string) {\n    if (!roomUrl.endsWith(\".json\")) {\n      roomUrl += \"/room.json\";\n    }\n    roomUrl.replace(\"./\", \"\");\n    if (!roomUrl.startsWith(\"http\")) {\n      roomUrl = window.location.origin + \"/\" + roomUrl;\n    }\n    return roomUrl;\n  }\n\n  async loadRoomDefinitionFile(roomUrl: string) {\n    roomUrl = this.cleanUpRoomUrl(roomUrl);\n    this.roomUrl = roomUrl;\n    let response = await fetch(roomUrl);\n    return await response.json();\n  }\n\n  async searchRoomDefinitionFile() {\n    //how to find a room\n    //1 - search in window.axolotis.room\n    //2 - search in meta tag\n    if ((window as any).axolotis && (window as any).axolotis.room) {\n      return (window as any).axolotis.room;\n    }\n    // @ts-ignore\n    for (const tag of window.document.head.children) {\n      if (tag.tagName === \"META\" && (tag as any).name === \"axolotis:room\") {\n        let roomUrl = (tag as any).content;\n        return this.loadRoomDefinitionFile(roomUrl);\n      }\n    }\n    throw new Error(\"No room definition found in meta axolotis:room\");\n  }\n\n  getType(): string {\n    return CodeLoaderComponent.name;\n  }\n\n  async awaitInitialLoading() {\n    await this.initialLoading;\n  }\n\n  async startLoading(\n    world: WorldEntity,\n    list: any[],\n    loadedCallBack: (progress: number, total: number) => void\n  ) {\n    let promises: (() => Promise<any>)[] = [];\n    for (const key in list) {\n      const entry = list[key];\n      if (entry.type === \"ecs-component-loader\" && entry.module) {\n        promises.push(\n          () =>\n            new Promise(async (resolve, reject) => {\n              entry.name = entry.name || \"Factory\";\n              let module = await instanciateWebpackAsyncModule<\n                ComponentFactory<Component>\n              >(entry.module, entry.name);\n              let component = await module.create(world, entry.config || {});\n              if (!component.getType) {\n                throw new Error(\n                  \"Not a component : \" +\n                    entry.module +\n                    \" \" +\n                    component.constructor.name\n                );\n              }\n              world.addComponent(component);\n              resolve(module);\n            })\n        );\n      }\n      if (entry.type === \"ecs-service-loader\" && entry.module) {\n        let service = await world.getFirstComponentByType<ServiceEntity>(\n          ServiceEntity.name\n        );\n        await service.getService<any>(entry.module);\n      }\n      if (entry.type === \"assets-loader\" && entry.url) {\n        promises.push(() => loadAssets(entry.url));\n      }\n    }\n\n    let promise = load(promises, loadedCallBack);\n    promise.then((value) => {\n      if (this.initialLoadingResolver !== undefined) {\n        this.initialLoadingResolver(value);\n      }\n    });\n    promise.catch((reason) => {\n      console.error(reason);\n    });\n    return promise;\n  }\n}\n","export function load(\n  modules: (() => Promise<any>)[],\n  loadedCallBack: (progress: number, total: number) => void\n) {\n  let ret: any[] = [];\n  let nbLoaded = 0;\n  for (const promiseCb of modules) {\n    const promise = promiseCb(); //trigger the load\n    ret.push(promise);\n    promise.then(() => {\n      nbLoaded++;\n      loadedCallBack(nbLoaded, modules.length);\n    });\n  }\n  return Promise.all(ret);\n}\n","//Autogenerated\n/* Webpack use module name for loading and computing code bundle and split chunk so we cannot introduce variable in the import thus we create this redirecting file*/\nexport async function getWebpackClassName(path, classname) {\n  if (\n    path === \"@root/lib/modules/ammo/AmmoPhysics\" &&\n    classname === \"Factory\"\n  ) {\n    let module = await import(\"@root/lib/modules/ammo/AmmoPhysics\");\n    return module.Factory.name;\n  } else if (\n    path === \"@root/lib/modules/controller/cameraController/OrbitController\" &&\n    classname === \"Factory\"\n  ) {\n    let module = await import(\n      \"@root/lib/modules/controller/cameraController/OrbitController\"\n    );\n    return module.Factory.name;\n  } else if (\n    path === \"@root/lib/modules/controller/pathFindingPlayer/Input\" &&\n    classname === \"Factory\"\n  ) {\n    let module = await import(\n      \"@root/lib/modules/controller/pathFindingPlayer/Input\"\n    );\n    return module.Factory.name;\n  } else if (\n    path === \"@root/lib/modules/controller/pathFindingPlayer/NavMeshPlayer\" &&\n    classname === \"Factory\"\n  ) {\n    let module = await import(\n      \"@root/lib/modules/controller/pathFindingPlayer/NavMeshPlayer\"\n    );\n    return module.Factory.name;\n  } else if (\n    path === \"@root/lib/modules/controller/physicPlayerControl/Input\" &&\n    classname === \"Factory\"\n  ) {\n    let module = await import(\n      \"@root/lib/modules/controller/physicPlayerControl/Input\"\n    );\n    return module.Factory.name;\n  } else if (\n    path ===\n      \"@root/lib/modules/controller/physicPlayerControl/PlayerControls\" &&\n    classname === \"Factory\"\n  ) {\n    let module = await import(\n      \"@root/lib/modules/controller/physicPlayerControl/PlayerControls\"\n    );\n    return module.Factory.name;\n  } else if (\n    path === \"@root/lib/modules/controller/PlayerService\" &&\n    classname === \"Factory\"\n  ) {\n    let module = await import(\"@root/lib/modules/controller/PlayerService\");\n    return module.Factory.name;\n  } else if (\n    path === \"@root/lib/modules/core/WorldService\" &&\n    classname === \"Factory\"\n  ) {\n    let module = await import(\"@root/lib/modules/core/WorldService\");\n    return module.Factory.name;\n  } else if (\n    path === \"@root/lib/modules/FrameLoop\" &&\n    classname === \"Factory\"\n  ) {\n    let module = await import(\"@root/lib/modules/FrameLoop\");\n    return module.Factory.name;\n  } else if (\n    path === \"@root/lib/modules/portals/PortalLink\" &&\n    classname === \"Factory\"\n  ) {\n    let module = await import(\"@root/lib/modules/portals/PortalLink\");\n    return module.Factory.name;\n  } else if (\n    path === \"@root/lib/modules/portals/PortalsService\" &&\n    classname === \"Factory\"\n  ) {\n    let module = await import(\"@root/lib/modules/portals/PortalsService\");\n    return module.Factory.name;\n  } else if (\n    path === \"@root/lib/modules/scenes/demo1/GLTFScene\" &&\n    classname === \"Factory\"\n  ) {\n    let module = await import(\"@root/lib/modules/scenes/demo1/GLTFScene\");\n    return module.Factory.name;\n  } else if (\n    path === \"@root/lib/modules/scenes/demo2/LevelSetup\" &&\n    classname === \"Factory\"\n  ) {\n    let module = await import(\"@root/lib/modules/scenes/demo2/LevelSetup\");\n    return module.Factory.name;\n  } else if (\n    path === \"@root/lib/modules/scenes/demo2/Sky2\" &&\n    classname === \"Factory\"\n  ) {\n    let module = await import(\"@root/lib/modules/scenes/demo2/Sky2\");\n    return module.Factory.name;\n  } else if (\n    path === \"@root/lib/modules/spoke/SpokeRoomLoader\" &&\n    classname === \"Factory\"\n  ) {\n    let module = await import(\"@root/lib/modules/spoke/SpokeRoomLoader\");\n    return module.Factory.name;\n  } else if (\n    path === \"@root/lib/modules/three/ThreeLib\" &&\n    classname === \"Factory\"\n  ) {\n    let module = await import(\"@root/lib/modules/three/ThreeLib\");\n    return module.Factory.name;\n  } else {\n    throw new Error(\"Class Not Found\");\n  }\n}\n","import { loadModuleAsync } from \"@root/lib/generated/webpack/module/WebpackLoader\";\nimport { getWebpackClassName } from \"@root/lib/generated/webpack/module/ClassNameConverter\";\n\n//TODO separate the concept of of webpack module and world component (see WebpackLoader)\n//Add the concept of service that can lazy load - using everywhere with the same name and no parameters\n// eg three and ammo are singleton service\n// using tuple package + class name like webpack module\n// idea add a system entity in the world that list all the services and maintains unicity?\n// using or not the world API - World entity have a type but the name is set in the class - a little dirty since i do not want to hardcode the package in the class as a name.\n//lazy load entity would be cool tho\n\nexport interface WebpackLazyModule {\n  /* constructor(); should have a constructor */\n}\n\nexport async function instanciateWebpackAsyncModule<T>(\n  importPath: string,\n  classname: string\n): Promise<T> {\n  const module = await loadModuleAsync(importPath);\n  for (const key in module) {\n    const sub = module[key];\n    if (\n      sub.prototype &&\n      sub.prototype.constructor.name ===\n        (await getWebpackClassName(importPath, classname))\n    ) {\n      //identifiying the module\n      return new sub();\n    }\n  }\n  throw new Error(\"invalid factory \" + importPath + \" - \" + classname);\n}\n","export async function loadModuleAsync(name): Promise<any> {\n  //Autogenerated\n  /* Webpack use module name for loading and computing code bundle and split chunk so we cannot introduce variable in the import thus we create this redirecting file*/\n  switch (name) {\n    case \"@root/lib/modules/ammo/AmmoPhysics\":\n      return import(\"@root/lib/modules/ammo/AmmoPhysics\");\n    case \"@root/lib/modules/controller/cameraController/OrbitController\":\n      return import(\n        \"@root/lib/modules/controller/cameraController/OrbitController\"\n      );\n    case \"@root/lib/modules/controller/pathFindingPlayer/Input\":\n      return import(\"@root/lib/modules/controller/pathFindingPlayer/Input\");\n    case \"@root/lib/modules/controller/pathFindingPlayer/NavMeshPlayer\":\n      return import(\n        \"@root/lib/modules/controller/pathFindingPlayer/NavMeshPlayer\"\n      );\n    case \"@root/lib/modules/controller/physicPlayerControl/Input\":\n      return import(\"@root/lib/modules/controller/physicPlayerControl/Input\");\n    case \"@root/lib/modules/controller/physicPlayerControl/PlayerControls\":\n      return import(\n        \"@root/lib/modules/controller/physicPlayerControl/PlayerControls\"\n      );\n    case \"@root/lib/modules/controller/PlayerService\":\n      return import(\"@root/lib/modules/controller/PlayerService\");\n    case \"@root/lib/modules/core/WorldService\":\n      return import(\"@root/lib/modules/core/WorldService\");\n    case \"@root/lib/modules/FrameLoop\":\n      return import(\"@root/lib/modules/FrameLoop\");\n    case \"@root/lib/modules/portals/PortalLink\":\n      return import(\"@root/lib/modules/portals/PortalLink\");\n    case \"@root/lib/modules/portals/PortalsService\":\n      return import(\"@root/lib/modules/portals/PortalsService\");\n    case \"@root/lib/modules/scenes/demo1/GLTFScene\":\n      return import(\"@root/lib/modules/scenes/demo1/GLTFScene\");\n    case \"@root/lib/modules/scenes/demo2/LevelSetup\":\n      return import(\"@root/lib/modules/scenes/demo2/LevelSetup\");\n    case \"@root/lib/modules/scenes/demo2/Sky2\":\n      return import(\"@root/lib/modules/scenes/demo2/Sky2\");\n    case \"@root/lib/modules/spoke/SpokeRoomLoader\":\n      return import(\"@root/lib/modules/spoke/SpokeRoomLoader\");\n    case \"@root/lib/modules/three/ThreeLib\":\n      return import(\"@root/lib/modules/three/ThreeLib\");\n    default:\n      throw new Error(\n        name + \" not found in module list - please run npm run pre-build\"\n      );\n  }\n}\n","import Component from \"@root/lib/modules/core/ecs/Component\";\nimport { LazyServices } from \"@root/lib/modules/core/service/LazyServices\";\n\nexport class ServiceEntity extends LazyServices implements Component {\n  getType(): string {\n    return ServiceEntity.name;\n  }\n}\n","import { instanciateWebpackAsyncModule } from \"@root/lib/modules/core/loader/WebpackLoader\";\nimport Component from \"@root/lib/modules/core/ecs/Component\";\n\nexport interface Service<T> {\n  create(services: LazyServices): Promise<T>;\n}\n\nexport class LazyServices {\n  service: { [id: string]: Promise<Component> | undefined } = {};\n\n  toId(path, classname) {\n    return path + \":\" + classname;\n  }\n\n  /* async getServiceFromModue<T>(modulePromise:Promise<any>, classname:string = \"Factory\"):Promise<any>{\n\n    }*/\n\n  setService(path: string, service: Component, classname: string = \"Factory\") {\n    this.service[this.toId(path, classname)] = Promise.resolve(service);\n  }\n\n  async getService<T extends Component>(\n    path: string,\n    classname: string = \"Factory\"\n  ): Promise<T> {\n    if (this.service[this.toId(path, classname)]) {\n      const module = await this.service[this.toId(path, classname)];\n      if (!module) {\n        throw new Error(\"error\");\n      }\n      return module as T;\n    }\n    if (!this.service[this.toId(path, classname)]) {\n      let modulePromise = instanciateWebpackAsyncModule<Service<T>>(\n        path,\n        classname\n      );\n      this.service[this.toId(path, classname)] = new Promise(\n        async (resolve) => {\n          let t: Component = await (await modulePromise).create(this);\n          resolve(t);\n        }\n      );\n    }\n    return (await this.service[this.toId(path, classname)]) as T;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".index.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkaxolotis_player\"] = self[\"webpackChunkaxolotis_player\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","import { CodeLoaderComponent } from \"@root/lib/modules/core/loader/CodeLoaderComponent\";\nimport { ServiceEntity } from \"@root/lib/modules/core/service/ServiceEntity\";\nimport { WorldEntity } from \"@root/lib/modules/core/ecs/WorldEntity\";\n\nexport const BUILD_VERSION = require(\"../../../../../package.json\").version;\nconsole.log(BUILD_VERSION);\n\nexport function init() {\n  let serviceEntity = new ServiceEntity();\n  let world = new WorldEntity();\n  world.addComponent(serviceEntity);\n  let codeLoaderComponent = new CodeLoaderComponent();\n  serviceEntity.setService(\n    \"@root/lib/modules/core/loader/CodeLoaderService\",\n    codeLoaderComponent\n  );\n  codeLoaderComponent.searchRoomDefinitionFile().then((json) => {\n    codeLoaderComponent\n      .startLoading(world, json.entities, (progress, total) => {\n        console.log(\"[\" + progress + \"/\" + total + \"]\");\n        const progressbar: any = document.getElementById(\"progress\");\n        progressbar.style.width = `${(progress / total) * 100}%`;\n      })\n      .then(() => {\n        console.log(\"loading complete\");\n        (document.getElementById(\"progresscontainer\") as any).className +=\n          \"load\";\n      });\n  });\n}\n","import { init } from \"@root/lib/modules/core/loader/CoreInit\";\n\nclass MyLibrary {\n  constructor() {\n    console.log(\"Library constructor loaded 2\");\n  }\n\n  myMethod = (): boolean => {\n    console.log(\"Library method fired 2\");\n    init();\n    return true;\n  };\n}\n\nexport default MyLibrary;\n"],"names":["root","factory","exports","module","define","amd","self","inProgress","dataWebpackPrefix","Factory","constructor","services","WorldService","activeWorld","worlds","addOnWorldChangeCallback","addOnWorldAddedCallback","registerNewWorld","worldEntity","push","window","axolotis","world","console","log","worldtmp","this","getWorlds","getFirstComponentByType","ServiceEntity","Error","getService","then","async","codeLoader","awaitInitialLoading","callback","setActiveWorldByNumber","getType","name","getActiveWorld","isActiveWorld","init","addOnWorldAdded","setActiveWorld","i","length","number","addComponent","component","components","waitingForComponent","elem","removeAllComponents","forEach","comp","removeComponent","destroy","filter","addComponents","getComponents","getComponentByType","type","ret","getComponentByTypeStartsWith","startsWith","getFirstComponentByTypeStartsWith","Promise","resolve","reject","WorldEntity","Entity","super","assetsLoader","loaderName","loaderLoader","loaderCache","loadAssets","path","assets","endsWith","loader","getLoader","GLTFLoader","result","loadAsync","TextureLoader","CodeLoaderComponent","initialLoading","initialLoadingResolver","cleanUpRoomUrl","roomUrl","replace","location","origin","response","fetch","json","room","tag","document","head","children","tagName","content","loadRoomDefinitionFile","list","loadedCallBack","promises","key","entry","instanciateWebpackAsyncModule","create","config","service","url","promise","modules","nbLoaded","promiseCb","all","load","value","undefined","catch","reason","error","getWebpackClassName","classname","importPath","loadModuleAsync","sub","prototype","toId","setService","modulePromise","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","m","n","getter","__esModule","d","a","definition","o","Object","defineProperty","enumerable","get","f","e","chunkId","keys","reduce","u","miniCssF","g","globalThis","Function","obj","prop","hasOwnProperty","call","l","done","script","needAttach","scripts","getElementsByTagName","s","getAttribute","createElement","charset","timeout","nc","setAttribute","src","onScriptComplete","prev","event","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","fn","setTimeout","bind","target","appendChild","r","Symbol","toStringTag","scriptUrl","importScripts","currentScript","p","installedChunks","j","installedChunkData","errorType","realSrc","message","request","webpackJsonpCallback","parentChunkLoadingFunction","data","chunkIds","moreModules","runtime","some","id","chunkLoadingGlobal","BUILD_VERSION","require","serviceEntity","codeLoaderComponent","searchRoomDefinitionFile","startLoading","entities","progress","total","getElementById","style","width","className"],"sourceRoot":""}