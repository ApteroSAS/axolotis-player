{"version":3,"file":"index.js","mappings":";;;;;;;;;;;CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,kBAAmB,GAAIH,GACJ,iBAAZC,QACdA,QAAQ,mBAAqBD,IAE7BD,EAAK,mBAAqBC,IAR5B,CASGK,MAAM,WACT,kB,6DCTIC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaR,QAGrB,IAAIC,EAASI,EAAyBE,GAAY,CAGjDP,QAAS,IAOV,OAHAU,EAAoBH,GAAUN,EAAQA,EAAOD,QAASM,GAG/CL,EAAOD,QCpBfM,EAAoBK,EAAI,SAASX,EAASY,GACzC,IAAI,IAAIC,KAAOD,EACXN,EAAoBQ,EAAEF,EAAYC,KAASP,EAAoBQ,EAAEd,EAASa,IAC5EE,OAAOC,eAAehB,EAASa,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3EP,EAAoBQ,EAAI,SAASK,EAAKC,GAAQ,OAAOL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,ICC/Fd,EAAoBkB,EAAI,SAASxB,GACX,oBAAXyB,QAA0BA,OAAOC,aAC1CX,OAAOC,eAAehB,EAASyB,OAAOC,YAAa,CAAEC,MAAO,WAE7DZ,OAAOC,eAAehB,EAAS,aAAc,CAAE2B,OAAO,K,qcCqEvD,MAvEO,MAGLC,YAAoBC,G,UAAc,KAAdA,KAAAA,E,EAFc,I,EAEA,gB,EAAA,M,sFAE3BC,aAAkCC,GAEvC,OADAC,KAAKC,WAAWC,KAAKH,GACdA,EAGFI,sBACLH,KAAKC,WAAWG,SAASC,IACvBL,KAAKM,gBAAgBD,MAIlBC,gBAAqCP,GAO1C,MANI,YAAaA,GACdA,EAA0CQ,UAE7CP,KAAKC,WAAaD,KAAKC,WAAWO,QAAQH,GACjCA,GAAQN,IAEVA,EAGFU,cAAcR,GACnBA,EAAWG,SAASC,IAClBL,KAAKF,aAAaO,MAIfK,gBACL,OAAOV,KAAKC,WAGPU,mBAAwCC,GAC7C,IAAIC,EAAW,GAMf,OALAb,KAAKC,WAAWG,SAASC,IACnBA,EAAKS,YAAcF,GACrBC,EAAIX,KAAKG,MAGNQ,EAGFE,6BAA6BH,GAClC,IAAIC,EAAmB,GAMvB,OALAb,KAAKC,WAAWG,SAASC,IACnBA,EAAKS,UAAUE,WAAWJ,IAC5BC,EAAIX,KAAKG,MAGNQ,EAGFI,kCACLL,GAEA,OAAOZ,KAAKe,6BAA6BH,GAAM,GAG1CM,wBAA6CN,GAClD,OAAOZ,KAAKW,mBAAmBC,GAAM,GAGhCE,UACL,OAAOd,KAAKH,OCpET,MAAMsB,UAAoBC,EAC/BxB,cACEyB,MAAM,UCJV,IAAIC,EAAW,KAER,SAASC,EAAoB1C,GAoBlC,MAlBsB,oBAAX2C,SACHA,OAAeF,WAClBE,OAAeF,SAAW,KAK1BA,GAA8B,oBAAXE,SACtBF,EAAYE,OAAeF,UAGxBA,IACHA,EAAW,IAGRA,EAASzC,KACZyC,EAASzC,GAAO,IAEXyC,EAASzC,GCfX,SAAS4C,EACd5B,EACA5B,EACAyD,GAKA,GAHKA,IACHA,EAAgBH,EAA+B,iBAE7CG,EAAc7B,GAChB,MAAM,IAAI8B,MAAM,0BAElBD,EAAc7B,GAAQ5B,EAGjB,SAAS2D,EACdC,GAGA,IAFAC,EAEA,wDADAJ,EACA,uCACKA,IACHA,EAAgBH,EAA+B,iBAE7CO,GACFC,QAAQC,IAAI,oBAAqBH,GAEnC9C,OAAOkD,OAAOP,EAAeG,GCzBxBK,eAAeC,EACpBC,EACAV,GAEA,IAAIzD,EAAS,KACb,IAAIyD,EAKG,MAAIU,EAAWpB,WAAW,QAEzB,IAAIW,MAAM,uCAEhBI,QAAQC,IAAI,0BAA2BN,GACjC,IAAIC,MAAM,yCAA2CS,IAE7D,OAXEnE,QDsBGiE,eACLG,EACAC,GAEA,MAAMC,QAAoBD,EAAaD,KACjCpE,EAASsE,EAAYtE,OAC3B,IAAK,MAAMY,KAAOZ,EAAQ,CACxB,MAAMuE,EAAMvE,EAAOY,GACnB,GACE2D,EAAInD,WACJmD,EAAInD,UAAUO,YAAYC,OAAS0C,EAAYE,UAG/C,OAAO,IAAID,EAGf,MAAM,IAAIb,MAAM,mBAAqBU,EAAO,MAAQE,EAAYE,WCtC/CC,CACbN,EACAV,GASGzD,EClBF,MAAM0E,EACX/C,YAAoBgD,G,UAAoB,KAApBA,MAAAA,E,EAEwC,I,EAFpB,a,EAAA,M,sFAIxCC,WACET,EACAU,GAGA9C,KAAK8C,QAAQV,GAAcW,QAAQC,QAAQF,GAG7B,iBAAsBV,GACpC,GAAIpC,KAAK8C,QAAQV,GAAa,CAC5B,MAAMnE,QAAe+B,KAAK8C,QAAQV,GAClC,IAAKnE,EACH,MAAM,IAAI0D,MAAM,SAElB,OAAO1D,EAET,IAAK+B,KAAK8C,QAAQV,GAAa,CAC7B,IAGIa,EAAgBd,EAClBC,SAHOpC,KAAK8C,QAAQI,IACpBC,oBAKFnD,KAAK8C,QAAQV,GAAc,IAAIW,SAAQb,MAAAA,IAErCc,cADgCC,GAAeG,cAAcpD,UAIjE,aAAcA,KAAK8C,QAAQV,ICrCxB,MAAMiB,UAAiBV,EAC5B7B,UACE,OAAOuC,EAASxD,M,wHCGb,MAAMyD,EAKX1D,cAAc,uGACZI,KAAKuD,eAAiB,IAAIR,SAAcC,IACtChD,KAAKwD,uBAAyBR,KAIlClC,UACE,OAAOwC,EAAuBzD,KAGhCsD,mBACE,OAAOnD,KAAK0B,cAGW,kCACjB1B,KAAKuD,eAGK,mBAChBX,EACAa,EACAC,EACAhC,GAGA,GADA1B,KAAK0B,cAAgBA,EACC,QAAlB+B,EAAME,QACR,MAAM,IAAIhC,MAAM,eAElB,IAAIiC,EAAmC,GACvC,IAAK,MAAMC,KAAUJ,EAAMK,SACzB,IAAK,MAAMC,KAAgBF,EAAO5D,WAAY,CAC5C,IAAI+D,EAASD,EAAaC,OAC1BJ,EAAS1D,MACP,IACE,IAAI6C,SAAQb,MAAOc,EAASiB,KAC1B,MAAMhG,QAAekE,EAEnB4B,EAAa9F,OAAQyD,GACvB,IAAI3B,QAAkB9B,EAAOiG,gBAAgBtB,EAAOoB,GAAU,IAC9D,IAAKjE,EAAUe,QACb,MAAM,IAAIa,MACR,qBACEoC,EAAa9F,OACb,IACA8B,EAAUH,YAAYC,MAG5B+C,EAAM9C,aAAaC,GACnBiD,EAAQ/E,QAMlB,IAAIkG,ECnED,SACLC,EACAV,GAEA,IAAI7C,EAAa,GACbwD,EAAW,EACf,IAAK,MAAMC,KAAaF,EAAS,CAC/B,MAAMD,EAAUG,IAChBzD,EAAIX,KAAKiE,GACTA,EAAQI,MAAK,KACXF,IACAX,EAAeW,EAAUD,EAAQI,WAGrC,OAAOzB,QAAQ0B,IAAI5D,GDqDH6D,CAAKd,EAAUF,GAS7B,OARAS,EAAQI,MAAM5E,SACwBlB,IAAhCuB,KAAKwD,wBACPxD,KAAKwD,uBAAuB7D,MAGhCwE,EAAQQ,OAAOC,IACb7C,QAAQ8C,MAAMD,MAETT,GEtDJ,MAAMjB,EACX,6DAEKhB,eAAe4C,IAOpB,IANAC,EAMA,uDANgC,CAC9BpB,QAAS,MACTG,SAAU,IAEZJ,EAEA,uDAF4D,OAC5DhC,EACA,uCACKA,IACHA,EAAgBH,EAA+B,iBAEjD,IAAIqB,EAAQ,IAAIzB,EACZ6D,EAAgB,IAAI3B,EAAST,GACjCA,EAAM9C,aAAakF,GACnB,IAAIC,EAAsB,IAAI3B,EAQ9B,OAPA0B,EAAcnC,WAAWK,EAAyB+B,SAC5CA,EAAoBC,aACxBtC,EACAmC,EACArB,EACAhC,GAEKkB,ECxCF,MAAMuC,EAAgBC,EAAAA,KAAAA,GAC7BrD,QAAQC,IAAI,4BAA8BmD,GAE1C,MAAME,EAAeC,IACS,aAAxBC,SAASC,YAA6BD,SAASE,KACjDH,IAEA9D,OAAOkE,iBAAiB,mBAAoBJ,IAIzCpD,eAAeyD,EACpBC,GAKsB,IAJtB5B,EAIsB,uDADlB,GAECA,EAAO6B,aACV7B,EAAO6B,WAAa,CAACC,EAAkBC,KACrChE,QAAQC,IAAI,IAAM4D,EAAM,QAAUE,EAAW,IAAMC,EAAQ,OAG1D/B,EAAOgC,WACVhC,EAAOgC,SAAW,KAChBjE,QAAQC,IAAI,IAAM4D,EAAM,0BAG5B,MAAMpG,QAAUyG,MAAML,GAChBM,QAAa1G,EAAE2G,OACfC,EAAS,IAAIC,UACbd,EAAWa,EAAOE,gBAAgBJ,EAAM,aAC9C,IAAIzC,EAAwB8B,EAASE,KAAKc,qBAAqB,YAC/D,IAAK9C,GAAUA,GAAyB,GAAhBA,EAAMe,OAG5B,OAFAzC,QAAQyE,KAAK,mDACbxC,EAAOgC,WAGTjE,QAAQC,IAAIyB,GACZ,MAAMb,QAAckC,EAAY2B,EAAWhD,GAAQO,EAAO6B,YAE1D,OADA7B,EAAOgC,WACApD,EAGF,SAAS8D,IAKd,IAJA1C,EAIA,uDADI,GAECA,EAAO6B,aACV7B,EAAO6B,WAAa,CAACC,EAAkBC,KACrChE,QAAQC,IAAI,IAAM8D,EAAW,IAAMC,EAAQ,OAG1C/B,EAAOgC,WACVhC,EAAOgC,SAAW,KAChBjE,QAAQC,IAAI,sBAGhBqD,GAAY,KACV,IAAI5B,EACFjC,OAAO+D,SAASE,KAAKc,qBAAqB,YAC5C,IAAK9C,GAAUA,GAAyB,GAAhBA,EAAMe,OAG5B,OAFAzC,QAAQyE,KAAK,mDACbxC,EAAOgC,WAGTjE,QAAQC,IAAIyB,GACZqB,EAAY2B,EAAWhD,GAAQO,EAAO6B,YAAYtB,KAAKP,EAAOgC,aAIlE,SAASS,EAAWhD,GAClB,IAAIkD,EAAUlD,EAAM,GACpB,MAAM5C,EAAyB,CAC7B8C,QAAS,MACTG,SAAU,IAGZ,IAAK,MAAMD,KAAU8C,EAAQJ,qBAAqB,aAAc,CAC9D,IAAIK,EAAY,CAAE3G,WAAY,IAE9B,IAAK,MAAM4G,KAAehD,EAAO0C,qBAAqB,gBAAiB,CAErE,IAAIO,EAAcD,EACfE,aAAa,UACbC,QAAQ,kCAAmC,UAC1CjH,EAAY,CACd9B,OAAQ4I,EAAYE,aAAa,UACjC/C,OAAQiD,KAAKC,MAAMJ,IAErBF,EAAU3G,WAAWC,KAAKH,GAE5Bc,EAAIiD,SAAS5D,KAAK0G,GAEpB,OAAO/F,G,Kf7FT","sources":["webpack://axolotis-player/webpack/universalModuleDefinition","webpack://axolotis-player/webpack/bootstrap","webpack://axolotis-player/webpack/runtime/define property getters","webpack://axolotis-player/webpack/runtime/hasOwnProperty shorthand","webpack://axolotis-player/webpack/runtime/make namespace object","webpack://axolotis-player/./src/lib/modules/core/ecs/Entity.ts","webpack://axolotis-player/./src/lib/modules/core/ecs/WorldEntity.ts","webpack://axolotis-player/./src/lib/modules/core/loader/Global.ts","webpack://axolotis-player/./src/lib/modules/core/loader/LocalLoader.ts","webpack://axolotis-player/./src/lib/modules/core/loader/JsLoader.ts","webpack://axolotis-player/./src/lib/modules/core/loader/service/LazyServices.ts","webpack://axolotis-player/./src/lib/modules/core/loader/service/Services.ts","webpack://axolotis-player/./src/lib/modules/core/loader/InitialComponentLoader.ts","webpack://axolotis-player/./src/lib/modules/core/loader/CodeLoader.ts","webpack://axolotis-player/./src/lib/modules/core/loader/BasicInit.ts","webpack://axolotis-player/./src/lib/modules/core/loader/DomInit.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"axolotis-player\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"axolotis-player\"] = factory();\n\telse\n\t\troot[\"axolotis-player\"] = factory();\n})(self, function() {\nreturn ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { DestroyableComponent } from \"./DestroyableComponent\";\nimport { Component } from \"./Component\";\n\nexport class Entity implements Component {\n  private components: Component[] = [];\n\n  constructor(private name: string) {}\n\n  public addComponent<T extends Component>(component: T): T {\n    this.components.push(component);\n    return component;\n  }\n\n  public removeAllComponents() {\n    this.components.forEach((comp) => {\n      this.removeComponent(comp);\n    });\n  }\n\n  public removeComponent<T extends Component>(component: T): T {\n    if (\"destroy\" in component) {\n      (component as any as DestroyableComponent).destroy();\n    }\n    this.components = this.components.filter((comp) => {\n      return comp != component;\n    });\n    return component;\n  }\n\n  public addComponents(components: Component[]) {\n    components.forEach((comp) => {\n      this.addComponent(comp);\n    });\n  }\n\n  public getComponents(): Component[] {\n    return this.components;\n  }\n\n  public getComponentByType<T extends Component>(type: string): T[] {\n    let ret: T[] = [];\n    this.components.forEach((comp) => {\n      if (comp.getType() === type) {\n        ret.push(comp as T);\n      }\n    });\n    return ret;\n  }\n\n  public getComponentByTypeStartsWith(type: string): Component[] {\n    let ret: Component[] = [];\n    this.components.forEach((comp) => {\n      if (comp.getType().startsWith(type)) {\n        ret.push(comp);\n      }\n    });\n    return ret;\n  }\n\n  public getFirstComponentByTypeStartsWith<T extends Component>(\n    type: string\n  ): T {\n    return this.getComponentByTypeStartsWith(type)[0] as T;\n  }\n\n  public getFirstComponentByType<T extends Component>(type: string): T {\n    return this.getComponentByType(type)[0] as T;\n  }\n\n  public getType(): string {\n    return this.name;\n  }\n}\n\nexport default Entity;\n","import Entity from \"@root/lib/modules/core/ecs/Entity\";\n\nexport class WorldEntity extends Entity {\n  constructor() {\n    super(\"world\");\n  }\n}\n","var axolotis = null;\n\nexport function getGlobalStorage<T>(key): T {\n  //not axolotis in window => create it\n  if (typeof window !== \"undefined\") {\n    if (!(window as any).axolotis) {\n      (window as any).axolotis = {};\n    }\n  }\n\n  //axolotis var not initialized with window\n  if (!axolotis && typeof window !== \"undefined\") {\n    axolotis = (window as any).axolotis;\n  }\n\n  if (!axolotis) {\n    axolotis = {};\n  }\n\n  if (!axolotis[key]) {\n    axolotis[key] = {};\n  }\n  return axolotis[key] as T;\n}\n","import { getGlobalStorage } from \"@root/lib/modules/core/loader/Global\";\n\nexport type Module = () => Promise<{ module: any; classname: string }>;\nexport interface LocalModules {\n  [id: string]: Module;\n}\n\nexport function registerLocalModule(\n  name: string,\n  module: Module,\n  moduleStorage?: LocalModules\n) {\n  if (!moduleStorage) {\n    moduleStorage = getGlobalStorage<LocalModules>(\"localModules\");\n  }\n  if (moduleStorage[name]) {\n    throw new Error(\"Module already defined\");\n  }\n  moduleStorage[name] = module;\n}\n\nexport function registerLocalModuleList(\n  localModulesList: LocalModules,\n  verbose: boolean = false,\n  moduleStorage?: LocalModules\n) {\n  if (!moduleStorage) {\n    moduleStorage = getGlobalStorage<LocalModules>(\"localModules\");\n  }\n  if (verbose) {\n    console.log(\"imported module :\", localModulesList);\n  }\n  Object.assign(moduleStorage, localModulesList);\n}\n\nexport async function instantiateLocalAsyncModule<T>(\n  fqcn: string,\n  localModules: LocalModules\n): Promise<T> {\n  const localModule = await localModules[fqcn]();\n  const module = localModule.module;\n  for (const key in module) {\n    const sub = module[key];\n    if (\n      sub.prototype &&\n      sub.prototype.constructor.name === localModule.classname\n    ) {\n      //identifiying the module\n      return new sub();\n    }\n  }\n  throw new Error(\"invalid factory \" + fqcn + \" - \" + localModule.classname);\n}\n","import { ComponentFactory } from \"@root/lib/modules/core/ecs/ComponentFactory\";\nimport Component from \"@root/lib/modules/core/ecs/Component\";\nimport {\n  instantiateLocalAsyncModule,\n  LocalModules,\n} from \"@root/lib/modules/core/loader/LocalLoader\";\n\nexport async function instantiateAsyncModule<T>(\n  moduleName: string,\n  moduleStorage: LocalModules\n): Promise<T> {\n  let module = null;\n  if (moduleStorage) {\n    module = await instantiateLocalAsyncModule<ComponentFactory<Component>>(\n      moduleName,\n      moduleStorage\n    );\n  } else if (moduleName.startsWith(\"http\")) {\n    //TODO remote module \"https://\"\n    throw new Error(\"remote modules not implemented yet\");\n  } else {\n    console.log(\"local module installed:\", moduleStorage);\n    throw new Error(\"unknown module - please register it - \" + moduleName);\n  }\n  return module;\n}\n","import Component from \"@root/lib/modules/core/ecs/Component\";\nimport { instantiateAsyncModule } from \"@root/lib/modules/core/loader/JsLoader\";\nimport { Service } from \"@root/lib/modules/core/ecs/Service\";\nimport { InitialComponentLoader, WorldEntity } from \"@root/lib\";\nimport { CODE_LOADER_MODULE_NAME } from \"@root/lib/modules/core/loader/BasicInit\";\n\nexport class LazyServices {\n  constructor(private world: WorldEntity) {}\n\n  service: { [id: string]: Promise<Component> | undefined } = {};\n\n  setService(\n    moduleName: string,\n    service: Component,\n    classname: string = \"Factory\"\n  ) {\n    this.service[moduleName] = Promise.resolve(service);\n  }\n\n  async getService<T extends Component>(moduleName: string): Promise<T> {\n    if (this.service[moduleName]) {\n      const module = await this.service[moduleName];\n      if (!module) {\n        throw new Error(\"error\");\n      }\n      return module as T;\n    }\n    if (!this.service[moduleName]) {\n      let modulesList = (\n        (await this.service[CODE_LOADER_MODULE_NAME]) as InitialComponentLoader\n      ).getModuleStorage();\n      let modulePromise = instantiateAsyncModule<Service<T>>(\n        moduleName,\n        modulesList\n      );\n      this.service[moduleName] = new Promise(async (resolve) => {\n        let t: Component = await (await modulePromise).createService(this);\n        resolve(t);\n      });\n    }\n    return (await this.service[moduleName]) as T;\n  }\n}\n","import Component from \"@root/lib/modules/core/ecs/Component\";\nimport { LazyServices } from \"@root/lib/modules/core/loader/service/LazyServices\";\n\nexport class Services extends LazyServices implements Component {\n  getType(): string {\n    return Services.name;\n  }\n}\n","import Component from \"@root/lib/modules/core/ecs/Component\";\nimport { load } from \"@root/lib/modules/core/loader/CodeLoader\";\nimport { ComponentFactory } from \"@root/lib/modules/core/ecs/ComponentFactory\";\nimport { WorldEntity } from \"@root/lib/modules/core/ecs/WorldEntity\";\nimport { instantiateAsyncModule } from \"@root/lib/modules/core/loader/JsLoader\";\nimport { WorldDefinition } from \"@root/lib/modules/core/loader/BasicInit\";\nimport { LocalModules } from \"@root/lib/modules/core/loader/LocalLoader\";\n\nexport class InitialComponentLoader implements Component {\n  private initialLoading: Promise<any>;\n  private initialLoadingResolver: ((value: any) => void) | undefined;\n  private moduleStorage: LocalModules;\n\n  constructor() {\n    this.initialLoading = new Promise<any>((resolve) => {\n      this.initialLoadingResolver = resolve;\n    });\n  }\n\n  getType(): string {\n    return InitialComponentLoader.name;\n  }\n\n  getModuleStorage() {\n    return this.moduleStorage;\n  }\n\n  async awaitInitialLoading() {\n    await this.initialLoading;\n  }\n\n  async startLoading(\n    world: WorldEntity,\n    scene: WorldDefinition,\n    loadedCallBack: (progress: number, total: number) => void,\n    moduleStorage: LocalModules\n  ) {\n    this.moduleStorage = moduleStorage;\n    if (scene.version !== \"2.0\") {\n      throw new Error(\"unsupported\");\n    }\n    let promises: (() => Promise<any>)[] = [];\n    for (const entity of scene.entities) {\n      for (const componentDef of entity.components) {\n        let config = componentDef.config;\n        promises.push(\n          () =>\n            new Promise(async (resolve, reject) => {\n              const module = await instantiateAsyncModule<\n                ComponentFactory<Component>\n              >(componentDef.module, moduleStorage);\n              let component = await module.createComponent(world, config || {});\n              if (!component.getType) {\n                throw new Error(\n                  \"Not a component : \" +\n                    componentDef.module +\n                    \" \" +\n                    component.constructor.name\n                );\n              }\n              world.addComponent(component); //TODO world default but should ad to an entity\n              resolve(module);\n            })\n        );\n      }\n    }\n\n    let promise = load(promises, loadedCallBack);\n    promise.then((value) => {\n      if (this.initialLoadingResolver !== undefined) {\n        this.initialLoadingResolver(value);\n      }\n    });\n    promise.catch((reason) => {\n      console.error(reason);\n    });\n    return promise;\n  }\n}\n","export function load(\n  modules: (() => Promise<any>)[],\n  loadedCallBack: (progress: number, total: number) => void\n) {\n  let ret: any[] = [];\n  let nbLoaded = 0;\n  for (const promiseCb of modules) {\n    const promise = promiseCb(); //trigger the load\n    ret.push(promise);\n    promise.then(() => {\n      nbLoaded++;\n      loadedCallBack(nbLoaded, modules.length);\n    });\n  }\n  return Promise.all(ret);\n}\n","import { Services } from \"@root/lib/modules/core/loader/service/Services\";\nimport { WorldEntity } from \"@root/lib\";\nimport { InitialComponentLoader } from \"@root/lib/modules/core/loader/InitialComponentLoader\";\nimport { getGlobalStorage } from \"@root/lib/modules/core/loader/Global\";\nimport { LocalModules } from \"@root/lib/modules/core/loader/LocalLoader\";\n\nexport interface WorldDefinitionV2 {\n  version: \"2.0\";\n  entities: {\n    components: {\n      module: string;\n      config: any;\n    }[];\n  }[];\n}\n\nexport interface WorldDefinitionV1 {\n  version?: \"1.0\";\n}\n\nexport type WorldDefinition = WorldDefinitionV1 | WorldDefinitionV2;\n\nexport const CODE_LOADER_MODULE_NAME =\n  \"@aptero/axolotis-player/core/loader/InitialComponentLoader\";\n\nexport async function createWorld(\n  initialScene: WorldDefinition = {\n    version: \"2.0\",\n    entities: [],\n  },\n  loadedCallBack: (progress: number, total: number) => void = () => {},\n  moduleStorage?: LocalModules\n) {\n  if (!moduleStorage) {\n    moduleStorage = getGlobalStorage<LocalModules>(\"localModules\");\n  }\n  let world = new WorldEntity();\n  let serviceEntity = new Services(world);\n  world.addComponent(serviceEntity);\n  let codeLoaderComponent = new InitialComponentLoader();\n  serviceEntity.setService(CODE_LOADER_MODULE_NAME, codeLoaderComponent);\n  await codeLoaderComponent.startLoading(\n    world,\n    initialScene,\n    loadedCallBack,\n    moduleStorage\n  );\n  return world;\n}\n","import { WorldEntity } from \"@root/lib/modules/core/ecs/WorldEntity\";\nimport {\n  createWorld,\n  WorldDefinition,\n  WorldDefinitionV2,\n} from \"@root/lib/modules/core/loader/BasicInit\";\n\nexport const BUILD_VERSION = require(\"../../../../../package.json\").version;\nconsole.log(\"Axolotis-player version :\" + BUILD_VERSION);\n\nconst windowReady = (callBack: () => void) => {\n  if (document.readyState === \"complete\" && document.body) {\n    callBack();\n  } else {\n    window.addEventListener(\"DOMContentLoaded\", callBack);\n  }\n};\n\nexport async function initHtmlFromUrl(\n  url: string,\n  config: {\n    onProgress?: (progress: number, total: number) => void;\n    onLoaded?: () => void;\n  } = {}\n): Promise<WorldEntity> {\n  if (!config.onProgress) {\n    config.onProgress = (progress: number, total: number) => {\n      console.log(\"[\" + url + \"] : [\" + progress + \"/\" + total + \"]\");\n    };\n  }\n  if (!config.onLoaded) {\n    config.onLoaded = () => {\n      console.log(\"[\" + url + \"] : loading complete\");\n    };\n  }\n  const r = await fetch(url);\n  const html = await r.text();\n  const parser = new DOMParser();\n  const document = parser.parseFromString(html, \"text/html\");\n  let scene: HTMLCollection = document.body.getElementsByTagName(\"ax-scene\"); //TODO assume only one scene\n  if (!scene || (scene && scene.length == 0)) {\n    console.warn(\"Axolotis scene not found (no tag ax-scene)\");\n    config.onLoaded();\n    return;\n  }\n  console.log(scene);\n  const world = await createWorld(htmlToJson(scene), config.onProgress);\n  config.onLoaded();\n  return world;\n}\n\nexport function initHtml(\n  config: {\n    onProgress?: (progress: number, total: number) => void;\n    onLoaded?: () => void;\n  } = {}\n) {\n  if (!config.onProgress) {\n    config.onProgress = (progress: number, total: number) => {\n      console.log(\"[\" + progress + \"/\" + total + \"]\");\n    };\n  }\n  if (!config.onLoaded) {\n    config.onLoaded = () => {\n      console.log(\"loading complete\");\n    };\n  }\n  windowReady(() => {\n    let scene: HTMLCollection =\n      window.document.body.getElementsByTagName(\"ax-scene\"); //TODO assume only one scene\n    if (!scene || (scene && scene.length == 0)) {\n      console.warn(\"Axolotis scene not found (no tag ax-scene)\");\n      config.onLoaded();\n      return;\n    }\n    console.log(scene);\n    createWorld(htmlToJson(scene), config.onProgress).then(config.onLoaded);\n  });\n}\n\nfunction htmlToJson(scene: HTMLCollection): WorldDefinition {\n  let sceneEl = scene[0];\n  const ret: WorldDefinitionV2 = {\n    version: \"2.0\",\n    entities: [],\n  };\n  // @ts-ignore\n  for (const entity of sceneEl.getElementsByTagName(\"ax-entity\")) {\n    let entityRet = { components: [] };\n\n    for (const componentEl of entity.getElementsByTagName(\"ax-component\")) {\n      //convert relaxed json to proper json\n      let correctJson = componentEl\n        .getAttribute(\"config\")\n        .replace(/(['\"])?([a-z0-9A-Z_]+)(['\"])?:/g, '\"$2\": ');\n      let component = {\n        module: componentEl.getAttribute(\"module\"),\n        config: JSON.parse(correctJson),\n      };\n      entityRet.components.push(component);\n    }\n    ret.entities.push(entityRet);\n  }\n  return ret;\n}\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","constructor","name","addComponent","component","this","components","push","removeAllComponents","forEach","comp","removeComponent","destroy","filter","addComponents","getComponents","getComponentByType","type","ret","getType","getComponentByTypeStartsWith","startsWith","getFirstComponentByTypeStartsWith","getFirstComponentByType","WorldEntity","Entity","super","axolotis","getGlobalStorage","window","registerLocalModule","moduleStorage","Error","registerLocalModuleList","localModulesList","verbose","console","log","assign","async","instantiateAsyncModule","moduleName","fqcn","localModules","localModule","sub","classname","instantiateLocalAsyncModule","LazyServices","world","setService","service","Promise","resolve","modulePromise","CODE_LOADER_MODULE_NAME","getModuleStorage","createService","Services","InitialComponentLoader","initialLoading","initialLoadingResolver","scene","loadedCallBack","version","promises","entity","entities","componentDef","config","reject","createComponent","promise","modules","nbLoaded","promiseCb","then","length","all","load","catch","reason","error","createWorld","initialScene","serviceEntity","codeLoaderComponent","startLoading","BUILD_VERSION","require","windowReady","callBack","document","readyState","body","addEventListener","initHtmlFromUrl","url","onProgress","progress","total","onLoaded","fetch","html","text","parser","DOMParser","parseFromString","getElementsByTagName","warn","htmlToJson","initHtml","sceneEl","entityRet","componentEl","correctJson","getAttribute","replace","JSON","parse"],"sourceRoot":""}