{"version":3,"file":"index.js","mappings":"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","sources":["webpack://axolotis-player/webpack/universalModuleDefinition","webpack://axolotis-player/webpack/runtime/load script","webpack://axolotis-player/./src/lib/modules/FrameLoop.ts","webpack://axolotis-player/./src/lib/modules/core/WorldService.ts","webpack://axolotis-player/./src/lib/generated/webpack/module/ClassNameConverter.ts","webpack://axolotis-player/./src/lib/modules/core/loader/WebpackLoader.ts","webpack://axolotis-player/./src/lib/generated/webpack/module/WebpackLoader.ts","webpack://axolotis-player/./src/lib/modules/core/loader/JsLoader.ts","webpack://axolotis-player/./src/lib/modules/core/loader/LocalLoader.ts","webpack://axolotis-player/./src/lib/modules/core/service/LazyServices.ts","webpack://axolotis-player/./src/lib/modules/core/service/ServiceEntity.ts","webpack://axolotis-player/webpack/bootstrap","webpack://axolotis-player/webpack/runtime/define property getters","webpack://axolotis-player/webpack/runtime/ensure chunk","webpack://axolotis-player/webpack/runtime/get javascript chunk filename","webpack://axolotis-player/webpack/runtime/get mini-css chunk filename","webpack://axolotis-player/webpack/runtime/global","webpack://axolotis-player/webpack/runtime/hasOwnProperty shorthand","webpack://axolotis-player/webpack/runtime/make namespace object","webpack://axolotis-player/webpack/runtime/publicPath","webpack://axolotis-player/webpack/runtime/jsonp chunk loading","webpack://axolotis-player/./src/lib/modules/core/loader/AssetsLoader.ts","webpack://axolotis-player/./src/lib/modules/core/loader/CodeLoaderComponent.ts","webpack://axolotis-player/./src/lib/modules/core/loader/CodeLoader.ts","webpack://axolotis-player/./src/lib/modules/core/ecs/Entity.ts","webpack://axolotis-player/./src/lib/modules/core/ecs/WorldEntity.ts","webpack://axolotis-player/./src/lib/modules/core/loader/CoreInit.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"axolotis-player\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"axolotis-player\"] = factory();\n\telse\n\t\troot[\"axolotis-player\"] = factory();\n})(self, function() {\nreturn ","var inProgress = {};\nvar dataWebpackPrefix = \"axolotis-player:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","import Component from \"@root/lib/modules/core/ecs/Component\";\n\nimport { CodeLoaderComponent } from \"@root/lib/modules/core/loader/CodeLoaderComponent\";\nimport {\n  LazyServices,\n  Service,\n} from \"@root/lib/modules/core/service/LazyServices\";\nimport { WebpackLazyModule } from \"@root/lib/modules/core/loader/WebpackLoader\";\n\nexport class Factory implements WebpackLazyModule, Service<FrameLoop> {\n  async createService(services: LazyServices): Promise<FrameLoop> {\n    let codeLoader = await services.getService<CodeLoaderComponent>(\n      \"@root/lib/modules/core/loader/CodeLoaderService\"\n    );\n    let module = new FrameLoop();\n    codeLoader.awaitInitialLoading().then(() => {\n      module.startAnimationFrameLoop();\n    });\n    return module;\n  }\n}\n\nexport class FrameLoop implements Component {\n  //TODO frame loop\n  // setInterval Frameloop\n  // animationFrame\n  // Physic update\n  // low workload adaptative loop? Like when FPS is green we execute code once evry Frame when it is not we execute once every seconde.\n  // worker loop?\n  // stats for all those loop (stats.js)\n  // API to add task consumer?\n  //callbacks:((delta:number)=>void)[] = [];\n  loops: { [id: string]: (delta: number) => void } = {};\n  private prevTime: number = 0;\n  private monitoringStart: (name) => void = () => {};\n  private monitoringEnd: (name) => void = () => {};\n  constructor() {}\n\n  startAnimationFrameLoop() {\n    const animate = (t) => {\n      this.monitoringStart(FrameLoop.name);\n      const delta = t - this.prevTime;\n      this.prevTime = t;\n      requestAnimationFrame(animate);\n      for (const callback in this.loops) {\n        this.monitoringStart(callback);\n        this.loops[callback](delta);\n        this.monitoringEnd(callback);\n      }\n      this.monitoringEnd(FrameLoop.name);\n    };\n    requestAnimationFrame(animate);\n  }\n\n  setMonitoringCallback(start: (name) => void, end: (name) => void) {\n    this.monitoringStart = start;\n    this.monitoringEnd = end;\n  }\n\n  removeLoop(loopName: string) {\n    delete this.loops[loopName];\n    this.monitoringStart(loopName); //set this loop to 0 fix\n    this.monitoringEnd(loopName);\n  }\n\n  addLoop(loopName: string, iterationCallback: (delta: number) => void) {\n    if (this.loops[loopName]) {\n      throw new Error();\n    }\n    this.loops[loopName] = iterationCallback;\n  }\n\n  getType(): string {\n    return FrameLoop.name;\n  }\n}\n","import { WebpackLazyModule } from \"@root/lib/modules/core/loader/WebpackLoader\";\nimport {\n  LazyServices,\n  Service,\n} from \"@root/lib/modules/core/service/LazyServices\";\nimport Component from \"@root/lib/modules/core/ecs/Component\";\nimport { WorldEntity } from \"@root/lib/modules/core/ecs/WorldEntity\";\nimport { ServiceEntity } from \"@root/lib/modules/core/service/ServiceEntity\";\nimport { CodeLoaderComponent } from \"@root/lib/modules/core/loader/CodeLoaderComponent\";\n\nexport class Factory implements WebpackLazyModule, Service<WorldService> {\n  constructor() {}\n\n  async createService(services: LazyServices): Promise<WorldService> {\n    return new WorldService(services);\n  }\n}\n\n//(await axolotis.worlds[1].components[0].service[\"@root/lib/modules/core/WorldService:Factory\"]).setActiveWorld(1)\n\ndeclare let window: any;\n\nlet activeWorld = -1;\nlet worlds: WorldEntity[] = [];\nlet addOnWorldChangeCallback: (() => void)[] = []; //do not use events emitter here to avoid surcharing dependencies in the code modules\nlet addOnWorldAddedCallback: (() => void)[] = []; //do not use events emitter here to avoid surcharing dependencies in the code modules\n\nexport function registerNewWorld(worldEntity: WorldEntity) {\n  worlds.push(worldEntity);\n  if (activeWorld < 0) {\n    activeWorld = 0;\n    window.axolotis.world = worlds[activeWorld];\n    window.axolotis.activeWorld = activeWorld;\n  }\n}\n\nif (window) {\n  if (!window.axolotis) {\n    window.axolotis = {};\n  }\n  window.axolotis.worlds = worlds;\n  window.axolotis.activeWorld = activeWorld;\n}\n\nexport class WorldService implements Component {\n  private world: WorldEntity;\n\n  constructor(services: LazyServices) {\n    console.log(\"info\");\n    let worldtmp: any = null;\n    for (const world of this.getWorlds()) {\n      let serviceEntity = world.getFirstComponentByType<ServiceEntity>(\n        ServiceEntity.name\n      );\n      if (serviceEntity == services) {\n        worldtmp = world;\n      }\n    }\n    if (!worldtmp) {\n      throw new Error();\n    }\n    this.world = worldtmp;\n\n    //new world service is new world event\n    services\n      .getService<CodeLoaderComponent>(\n        \"@root/lib/modules/core/loader/CodeLoaderService\"\n      )\n      .then(async (codeLoader) => {\n        codeLoader.awaitInitialLoading();\n        for (const callback of addOnWorldAddedCallback) {\n          callback();\n        }\n      });\n\n    if (activeWorld >= 0) {\n      this.setActiveWorldByNumber(activeWorld);\n    }\n  }\n\n  getType(): string {\n    return WorldService.name;\n  }\n\n  getWorlds() {\n    return worlds;\n  }\n\n  getActiveWorld() {\n    return worlds[activeWorld];\n  }\n\n  isActiveWorld() {\n    return this.world == this.getActiveWorld();\n  }\n\n  addOnWorldChangeCallback(callback: () => void, init: boolean = false) {\n    addOnWorldChangeCallback.push(callback);\n    if (init) {\n      callback();\n    }\n  }\n\n  addOnWorldAdded(callback: () => void, init: boolean = false) {\n    addOnWorldAddedCallback.push(callback);\n    if (init) {\n      callback();\n    }\n  }\n\n  setActiveWorld(world: WorldEntity) {\n    for (let i = 0; i < this.getWorlds().length; i++) {\n      if (world == this.getWorlds()[i]) {\n        this.setActiveWorldByNumber(i);\n        return;\n      }\n    }\n    throw new Error();\n  }\n\n  setActiveWorldByNumber(number: number) {\n    if (activeWorld != number) {\n      activeWorld = number;\n      if (window && window.axolotis) {\n        window.axolotis.activeWorld = activeWorld;\n        window.axolotis.world = worlds[activeWorld];\n      }\n      for (const callback of addOnWorldChangeCallback) {\n        callback();\n      }\n    }\n  }\n}\n","\n        //Autogenerated\n        /* Webpack use module name for loading and computing code bundle and split chunk so we cannot introduce variable in the import thus we create this redirecting file*/\n        export async function getWebpackClassName(path, classname) {\n            if (path === \"@root/lib/modules/core/WorldService\" && classname === \"Factory\") {\n        let module = await import(\"@root/lib/modules/core/WorldService\");\n        return module.Factory.name;\n    } else if (path === \"@root/lib/modules/FrameLoop\" && classname === \"Factory\") {\n        let module = await import(\"@root/lib/modules/FrameLoop\");\n        return module.Factory.name;\n    } else  {\n                throw new Error(\"Class Not Found\");\n            }\n        }","import { loadModuleAsync } from \"@root/lib/generated/webpack/module/WebpackLoader\";\nimport { getWebpackClassName } from \"@root/lib/generated/webpack/module/ClassNameConverter\";\n\n//TODO separate the concept of of webpack module and world component (see WebpackLoader)\n//Add the concept of service that can lazy load - using everywhere with the same name and no parameters\n// eg three and ammo are singleton service\n// using tuple package + class name like webpack module\n// idea add a system entity in the world that list all the services and maintains unicity?\n// using or not the world API - World entity have a type but the name is set in the class - a little dirty since i do not want to hardcode the package in the class as a name.\n//lazy load entity would be cool tho\n\nexport interface WebpackLazyModule {\n  /* constructor(); should have a constructor */\n}\n\nexport async function instanciateWebpackAsyncModule<T>(\n  importPath: string,\n  classname: string\n): Promise<T> {\n  const module = await loadModuleAsync(importPath);\n  for (const key in module) {\n    const sub = module[key];\n    if (\n      sub.prototype &&\n      sub.prototype.constructor.name ===\n        (await getWebpackClassName(importPath, classname))\n    ) {\n      //identifiying the module\n      return new sub();\n    }\n  }\n  throw new Error(\"invalid factory \" + importPath + \" - \" + classname);\n}\n","\n        export async function loadModuleAsync(name):Promise<any> {\n            //Autogenerated\n            /* Webpack use module name for loading and computing code bundle and split chunk so we cannot introduce variable in the import thus we create this redirecting file*/\n            switch (name) {\n                \n            case \"@root/lib/modules/core/WorldService\": return import(\"@root/lib/modules/core/WorldService\");\n            case \"@root/lib/modules/FrameLoop\": return import(\"@root/lib/modules/FrameLoop\");\n                default: throw new Error(name+\" not found in module list - please run npm run pre-build\");\n            }\n        }","import { ComponentFactory } from \"@root/lib/modules/core/ecs/ComponentFactory\";\nimport Component from \"@root/lib/modules/core/ecs/Component\";\nimport { instanciateWebpackAsyncModule } from \"@root/lib/modules/core/loader/WebpackLoader\";\nimport { instanciateLocalAsyncModule } from \"@root/lib/modules/core/loader/LocalLoader\";\n\nlet localModules: { [id: string]: () => Promise<any> } = {};\n\nexport function addLocalModule(localModulesAdded: {\n  [id: string]: () => Promise<any>;\n}) {\n  localModules = { ...localModules, ...localModulesAdded };\n}\n\nexport async function instanciateJsAsyncModule<T>(\n  moduleName: string,\n  classname: string\n): Promise<T> {\n  let module = null;\n  if (localModules[moduleName]) {\n    module = await instanciateLocalAsyncModule<ComponentFactory<Component>>(\n      moduleName,\n      classname,\n      localModules\n    );\n  } else {\n    module = await instanciateWebpackAsyncModule<ComponentFactory<Component>>(\n      moduleName,\n      classname\n    );\n  }\n  return module;\n}\n","import {getWebpackClassName} from \"@root/lib/generated/webpack/module/ClassNameConverter\";\n\nexport async function instanciateLocalAsyncModule<T>(\n  moduleName: string,\n  classname: string,\n  localModules: { [id: string]: () => Promise<any> } = {}\n): Promise<T> {\n  const module = await localModules[moduleName]();\n  for (const key in module) {\n    const sub = module[key];\n    if (sub.prototype &&\n      sub.prototype.constructor.name === classname) {\n      //identifiying the module\n      return new sub();\n    }\n  }\n  throw new Error(\"invalid factory \" + moduleName + \" - \" + classname);\n}\n","import { instanciateWebpackAsyncModule } from \"@root/lib/modules/core/loader/WebpackLoader\";\nimport Component from \"@root/lib/modules/core/ecs/Component\";\nimport { instanciateJsAsyncModule } from \"@root/lib/modules/core/loader/JsLoader\";\n\nexport interface Service<T> {\n  createService(services: LazyServices): Promise<T>;\n}\n\nexport class LazyServices {\n  service: { [id: string]: Promise<Component> | undefined } = {};\n\n  toId(path, classname) {\n    return path + \":\" + classname;\n  }\n\n  /* async getServiceFromModue<T>(modulePromise:Promise<any>, classname:string = \"Factory\"):Promise<any>{\n\n    }*/\n\n  setService(path: string, service: Component, classname: string = \"Factory\") {\n    this.service[this.toId(path, classname)] = Promise.resolve(service);\n  }\n\n  async getService<T extends Component>(\n    path: string,\n    classname: string = \"Factory\"\n  ): Promise<T> {\n    if (this.service[this.toId(path, classname)]) {\n      const module = await this.service[this.toId(path, classname)];\n      if (!module) {\n        throw new Error(\"error\");\n      }\n      return module as T;\n    }\n    if (!this.service[this.toId(path, classname)]) {\n      let modulePromise = instanciateJsAsyncModule<Service<T>>(path, classname);\n      this.service[this.toId(path, classname)] = new Promise(\n        async (resolve) => {\n          let t: Component = await (await modulePromise).createService(this);\n          resolve(t);\n        }\n      );\n    }\n    return (await this.service[this.toId(path, classname)]) as T;\n  }\n}\n","import Component from \"@root/lib/modules/core/ecs/Component\";\nimport { LazyServices } from \"@root/lib/modules/core/service/LazyServices\";\n\nexport class ServiceEntity extends LazyServices implements Component {\n  getType(): string {\n    return ServiceEntity.name;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t826: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkaxolotis_player\"] = self[\"webpackChunkaxolotis_player\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","/*\nplease do not add static import\n */\nexport class AssetsLoader {\n  loaderCache = {};\n  assets = {};\n\n  async getLoader(loaderName: string, loaderLoader: () => void) {\n    if (!this.loaderCache[loaderName]) {\n      this.loaderCache[loaderName] = await loaderLoader();\n    }\n    return this.loaderCache[loaderName];\n  }\n}\n\nexport const assetsLoader: AssetsLoader = new AssetsLoader();\n\nexport async function loadAssets(path: string) {\n  if (assetsLoader.assets[path]) {\n    return assetsLoader.assets[path];\n  }\n  /*\n    TODO createa a early start download of assets so that the GLB start downloading early in the waterfall\n    Not as simple as it seems may be doable using service worker\n    fetch(path);//start download of assets\n    var oReq = new XMLHttpRequest();\n    oReq.addEventListener(\"load\", ()=>{});\n    oReq.open(\"GET\", path);\n    oReq.send();\n    */\n  if (path.endsWith(\".glb\")) {\n    const loader = await assetsLoader.getLoader(\"GLTFLoader\", async () => {\n      const GLTFLoader: any = await import(\n        \"three/examples/jsm/loaders/GLTFLoader\"\n      );\n      const gltfLoader = new GLTFLoader.GLTFLoader();\n      return gltfLoader;\n    });\n    const result = await loader.loadAsync(path);\n    assetsLoader.assets[path] = result;\n  }\n  if (path.endsWith(\".jpg\")) {\n    const loader = await assetsLoader.getLoader(\"TextureLoader\", async () => {\n      const THREE: any = await import(\"three\");\n      const texLoader = new THREE.TextureLoader();\n      return texLoader;\n    });\n    const result = await loader.loadAsync(path);\n    assetsLoader.assets[path] = result;\n  }\n  return assetsLoader.assets[path];\n}\n","import Component from \"@root/lib/modules/core/ecs/Component\";\nimport { load } from \"@root/lib/modules/core/loader/CodeLoader\";\nimport { loadAssets } from \"@root/lib/modules/core/loader/AssetsLoader\";\nimport { ComponentFactory } from \"@root/lib/modules/core/ecs/ComponentFactory\";\nimport { WorldEntity } from \"@root/lib/modules/core/ecs/WorldEntity\";\nimport { ServiceEntity } from \"@root/lib/modules/core/service/ServiceEntity\";\nimport {\n  addLocalModule,\n  instanciateJsAsyncModule,\n} from \"@root/lib/modules/core/loader/JsLoader\";\n\nexport class CodeLoaderComponent implements Component {\n  private initialLoading: Promise<any>;\n  private initialLoadingResolver: ((value: any) => void) | undefined;\n  public roomUrl: string = \"\";\n\n  constructor() {\n    this.initialLoading = new Promise<any>((resolve) => {\n      this.initialLoadingResolver = resolve;\n    });\n  }\n\n  cleanUpRoomUrl(roomUrl: string) {\n    if (!roomUrl.endsWith(\".json\")) {\n      roomUrl += \"/room.json\";\n    }\n    roomUrl.replace(\"./\", \"\");\n    if (!roomUrl.startsWith(\"http\")) {\n      roomUrl = window.location.origin + \"/\" + roomUrl;\n    }\n    return roomUrl;\n  }\n\n  async loadRoomDefinitionFile(roomUrl: string) {\n    roomUrl = this.cleanUpRoomUrl(roomUrl);\n    this.roomUrl = roomUrl;\n    let response = await fetch(roomUrl);\n    return await response.json();\n  }\n\n  async searchRoomDefinitionFile() {\n    //how to find a room\n    //1 - search in window.axolotis.room\n    //2 - search in meta tag\n    if ((window as any).axolotis && (window as any).axolotis.room) {\n      return (window as any).axolotis.room;\n    }\n    // @ts-ignore\n    for (const tag of window.document.head.children) {\n      if (tag.tagName === \"META\" && (tag as any).name === \"axolotis:room\") {\n        let roomUrl = (tag as any).content;\n        return this.loadRoomDefinitionFile(roomUrl);\n      }\n    }\n    throw new Error(\"No room definition found in meta axolotis:room\");\n  }\n\n  getType(): string {\n    return CodeLoaderComponent.name;\n  }\n\n  async awaitInitialLoading() {\n    await this.initialLoading;\n  }\n\n  async startLoading(\n    world: WorldEntity,\n    list: any[],\n    localModules: { [id: string]: () => Promise<any> } = {},\n    loadedCallBack: (progress: number, total: number) => void\n  ) {\n    addLocalModule(localModules);\n    let promises: (() => Promise<any>)[] = [];\n    for (const key in list) {\n      const entry = list[key];\n      if (entry.type === \"ecs-component-loader\" && entry.module) {\n        promises.push(\n          () =>\n            new Promise(async (resolve, reject) => {\n              entry.name = entry.name || \"Factory\";\n              const module = await instanciateJsAsyncModule<\n                ComponentFactory<Component>\n              >(entry.module, entry.name);\n              let component = await module.createComponent(world, entry.config || {});\n              if (!component.getType) {\n                throw new Error(\n                  \"Not a component : \" +\n                    entry.module +\n                    \" \" +\n                    component.constructor.name\n                );\n              }\n              world.addComponent(component);\n              resolve(module);\n            })\n        );\n      }\n      if (entry.type === \"ecs-service-loader\" && entry.module) {\n        let service = await world.getFirstComponentByType<ServiceEntity>(\n          ServiceEntity.name\n        );\n        await service.getService<any>(entry.module);\n      }\n      if (entry.type === \"assets-loader\" && entry.url) {\n        promises.push(() => loadAssets(entry.url));\n      }\n    }\n\n    let promise = load(promises, loadedCallBack);\n    promise.then((value) => {\n      if (this.initialLoadingResolver !== undefined) {\n        this.initialLoadingResolver(value);\n      }\n    });\n    promise.catch((reason) => {\n      console.error(reason);\n    });\n    return promise;\n  }\n}\n","export function load(\n  modules: (() => Promise<any>)[],\n  loadedCallBack: (progress: number, total: number) => void\n) {\n  let ret: any[] = [];\n  let nbLoaded = 0;\n  for (const promiseCb of modules) {\n    const promise = promiseCb(); //trigger the load\n    ret.push(promise);\n    promise.then(() => {\n      nbLoaded++;\n      loadedCallBack(nbLoaded, modules.length);\n    });\n  }\n  return Promise.all(ret);\n}\n","import { DestroyableComponent } from \"./DestroyableComponent\";\nimport { Component } from \"./Component\";\n\nexport class Entity implements Component {\n  private components: Component[] = [];\n  private waitingForComponent: { [id: string]: any[] } = {};\n\n  constructor(private name: string) {}\n\n  public addComponent<T extends Component>(component: T): T {\n    this.components.push(component);\n\n    //part for async getComponent\n    if (this.waitingForComponent[component.getType()]) {\n      for (const elem of this.waitingForComponent[component.getType()]) {\n        elem(component);\n      }\n      delete this.waitingForComponent[component.getType()];\n    }\n\n    return component;\n  }\n\n  public removeAllComponents() {\n    this.components.forEach((comp) => {\n      this.removeComponent(comp);\n    });\n  }\n\n  public removeComponent<T extends Component>(component: T): T {\n    if (\"destroy\" in component) {\n      (component as any as DestroyableComponent).destroy();\n    }\n    this.components = this.components.filter((comp) => {\n      return comp != component;\n    });\n    return component;\n  }\n\n  public addComponents(components: Component[]) {\n    components.forEach((comp) => {\n      this.addComponent(comp);\n    });\n  }\n\n  public getComponents(): Component[] {\n    return this.components;\n  }\n\n  public getComponentByType<T extends Component>(type: string): T[] {\n    let ret: T[] = [];\n    this.components.forEach((comp) => {\n      if (comp.getType() === type) {\n        ret.push(comp as T);\n      }\n    });\n    return ret;\n  }\n\n  public getComponentByTypeStartsWith(type: string): Component[] {\n    let ret: Component[] = [];\n    this.components.forEach((comp) => {\n      if (comp.getType().startsWith(type)) {\n        ret.push(comp);\n      }\n    });\n    return ret;\n  }\n\n  public getFirstComponentByTypeStartsWith<T extends Component>(\n    type: string\n  ): T {\n    return this.getComponentByTypeStartsWith(type)[0] as T;\n  }\n\n  public getFirstComponentByType<T extends Component>(type: string): T {\n    return this.getComponentByType(type)[0] as T;\n  }\n\n  public async getFirstComponentByTypeAsync<T extends Component>(\n    type: string\n  ): Promise<T> {\n    if (this.getComponentByType(type)[0]) {\n      return this.getComponentByType(type)[0] as T;\n    } else {\n      if (!this.waitingForComponent[type]) {\n        this.waitingForComponent[type] = [];\n      }\n      let promise = new Promise<T>((resolve, reject) => {\n        this.waitingForComponent[type].push(resolve); //will resolve later\n      });\n      return promise;\n    }\n  }\n\n  public getType(): string {\n    return this.name;\n  }\n}\n\nexport default Entity;\n","import Entity from \"@root/lib/modules/core/ecs/Entity\";\nimport { registerNewWorld } from \"@root/lib/modules/core/WorldService\";\n\nexport class WorldEntity extends Entity {\n  constructor() {\n    super(\"world\");\n    registerNewWorld(this);\n  }\n}\n","import { CodeLoaderComponent } from \"@root/lib/modules/core/loader/CodeLoaderComponent\";\nimport { ServiceEntity } from \"@root/lib/modules/core/service/ServiceEntity\";\nimport { WorldEntity } from \"@root/lib/modules/core/ecs/WorldEntity\";\n\nexport const BUILD_VERSION = require(\"../../../../../package.json\").version;\nconsole.log(BUILD_VERSION);\n\nexport function init(localModules: { [id: string]: () => Promise<any> } = {}) {\n  let serviceEntity = new ServiceEntity();\n  let world = new WorldEntity();\n  world.addComponent(serviceEntity);\n  let codeLoaderComponent = new CodeLoaderComponent();\n  serviceEntity.setService(\n    \"@root/lib/modules/core/loader/CodeLoaderService\",\n    codeLoaderComponent\n  );\n  codeLoaderComponent.searchRoomDefinitionFile().then((json) => {\n    codeLoaderComponent\n      .startLoading(world, json.entities, localModules, (progress, total) => {\n        console.log(\"[\" + progress + \"/\" + total + \"]\");\n        const progressbar: any = document.getElementById(\"progress\");\n        progressbar.style.width = `${(progress / total) * 100}%`;\n      })\n      .then(() => {\n        console.log(\"loading complete\");\n        (document.getElementById(\"progresscontainer\") as any).className +=\n          \"load\";\n      });\n  });\n}\n"],"names":["root","factory","exports","module","define","amd","self","inProgress","dataWebpackPrefix","Factory","services","codeLoader","getService","FrameLoop","awaitInitialLoading","then","startAnimationFrameLoop","constructor","animate","t","this","monitoringStart","name","delta","prevTime","requestAnimationFrame","callback","loops","monitoringEnd","setMonitoringCallback","start","end","removeLoop","loopName","addLoop","iterationCallback","Error","getType","WorldService","activeWorld","worlds","addOnWorldChangeCallback","addOnWorldAddedCallback","registerNewWorld","worldEntity","push","window","axolotis","world","console","log","worldtmp","getWorlds","getFirstComponentByType","ServiceEntity","async","setActiveWorldByNumber","getActiveWorld","isActiveWorld","init","addOnWorldAdded","setActiveWorld","i","length","number","getWebpackClassName","path","classname","instanciateWebpackAsyncModule","importPath","loadModuleAsync","key","sub","prototype","localModules","addLocalModule","localModulesAdded","instanciateJsAsyncModule","moduleName","instanciateLocalAsyncModule","LazyServices","toId","setService","service","Promise","resolve","modulePromise","createService","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","d","definition","o","Object","defineProperty","enumerable","get","f","e","chunkId","all","keys","reduce","promises","u","miniCssF","g","globalThis","Function","obj","prop","hasOwnProperty","call","l","url","done","script","needAttach","scripts","document","getElementsByTagName","s","getAttribute","createElement","charset","timeout","nc","setAttribute","src","onScriptComplete","prev","event","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","forEach","fn","setTimeout","bind","type","target","head","appendChild","r","Symbol","toStringTag","value","scriptUrl","importScripts","location","currentScript","replace","p","installedChunks","j","installedChunkData","promise","reject","error","errorType","realSrc","message","request","webpackJsonpCallback","parentChunkLoadingFunction","data","chunkIds","moreModules","runtime","some","id","chunkLoadingGlobal","AssetsLoader","loaderName","loaderLoader","loaderCache","assetsLoader","loadAssets","assets","endsWith","loader","getLoader","GLTFLoader","result","loadAsync","TextureLoader","CodeLoaderComponent","initialLoading","initialLoadingResolver","cleanUpRoomUrl","roomUrl","startsWith","origin","response","fetch","json","room","tag","children","tagName","content","loadRoomDefinitionFile","list","loadedCallBack","entry","component","createComponent","config","addComponent","modules","ret","nbLoaded","promiseCb","load","catch","reason","components","waitingForComponent","elem","removeAllComponents","comp","removeComponent","destroy","filter","addComponents","getComponents","getComponentByType","getComponentByTypeStartsWith","getFirstComponentByTypeStartsWith","WorldEntity","Entity","super","BUILD_VERSION","require","serviceEntity","codeLoaderComponent","searchRoomDefinitionFile","startLoading","entities","progress","total","getElementById","style","width","className"],"sourceRoot":""}