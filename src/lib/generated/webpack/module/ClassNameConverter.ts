//Autogenerated
/* Webpack use module name for loading and computing code bundle and split chunk so we cannot introduce variable in the import thus we create this redirecting file*/
export async function getWebpackClassName(path, classname) {
  if (
    path === "@root/lib/modules/ammo/AmmoPhysics" &&
    classname === "Factory"
  ) {
    let module = await import("@root/lib/modules/ammo/AmmoPhysics");
    return module.Factory.name;
  } else if (
    path === "@root/lib/modules/controller/cameraController/OrbitController" &&
    classname === "Factory"
  ) {
    let module = await import(
      "@root/lib/modules/controller/cameraController/OrbitController"
    );
    return module.Factory.name;
  } else if (
    path === "@root/lib/modules/controller/pathFindingPlayer/Input" &&
    classname === "Factory"
  ) {
    let module = await import(
      "@root/lib/modules/controller/pathFindingPlayer/Input"
    );
    return module.Factory.name;
  } else if (
    path === "@root/lib/modules/controller/pathFindingPlayer/NavMeshPlayer" &&
    classname === "Factory"
  ) {
    let module = await import(
      "@root/lib/modules/controller/pathFindingPlayer/NavMeshPlayer"
    );
    return module.Factory.name;
  } else if (
    path === "@root/lib/modules/controller/physicPlayerControl/Input" &&
    classname === "Factory"
  ) {
    let module = await import(
      "@root/lib/modules/controller/physicPlayerControl/Input"
    );
    return module.Factory.name;
  } else if (
    path ===
      "@root/lib/modules/controller/physicPlayerControl/PlayerControls" &&
    classname === "Factory"
  ) {
    let module = await import(
      "@root/lib/modules/controller/physicPlayerControl/PlayerControls"
    );
    return module.Factory.name;
  } else if (
    path === "@root/lib/modules/controller/PlayerService" &&
    classname === "Factory"
  ) {
    let module = await import("@root/lib/modules/controller/PlayerService");
    return module.Factory.name;
  } else if (
    path === "@root/lib/modules/core/WorldService" &&
    classname === "Factory"
  ) {
    let module = await import("@root/lib/modules/core/WorldService");
    return module.Factory.name;
  } else if (
    path === "@root/lib/modules/FrameLoop" &&
    classname === "Factory"
  ) {
    let module = await import("@root/lib/modules/FrameLoop");
    return module.Factory.name;
  } else if (
    path === "@root/lib/modules/portals/PortalLink" &&
    classname === "Factory"
  ) {
    let module = await import("@root/lib/modules/portals/PortalLink");
    return module.Factory.name;
  } else if (
    path === "@root/lib/modules/portals/PortalsService" &&
    classname === "Factory"
  ) {
    let module = await import("@root/lib/modules/portals/PortalsService");
    return module.Factory.name;
  } else if (
    path === "@root/lib/modules/scenes/demo1/GLTFScene" &&
    classname === "Factory"
  ) {
    let module = await import("@root/lib/modules/scenes/demo1/GLTFScene");
    return module.Factory.name;
  } else if (
    path === "@root/lib/modules/scenes/demo2/LevelSetup" &&
    classname === "Factory"
  ) {
    let module = await import("@root/lib/modules/scenes/demo2/LevelSetup");
    return module.Factory.name;
  } else if (
    path === "@root/lib/modules/scenes/demo2/Sky2" &&
    classname === "Factory"
  ) {
    let module = await import("@root/lib/modules/scenes/demo2/Sky2");
    return module.Factory.name;
  } else if (
    path === "@root/lib/modules/spoke/SpokeRoomLoader" &&
    classname === "Factory"
  ) {
    let module = await import("@root/lib/modules/spoke/SpokeRoomLoader");
    return module.Factory.name;
  } else if (
    path === "@root/lib/modules/three/ThreeLib" &&
    classname === "Factory"
  ) {
    let module = await import("@root/lib/modules/three/ThreeLib");
    return module.Factory.name;
  } else {
    throw new Error("Class Not Found");
  }
}
